{
  "statement": "drop table if exists t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a int auto_increment , primary key (a));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set a=a+10 where a > 34;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      },
      {
        "name": ">",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set a=a+100 where a > 0;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      },
      {
        "name": ">",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set a=a+100 where a=1 and a=2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( place_id int (10) unsigned NOT NULL, shows int(10) unsigned DEFAULT '0' NOT NULL, ishows int(10) unsigned DEFAULT '0' NOT NULL, ushows int(10) unsigned DEFAULT '0' NOT NULL, clicks int(10) unsigned DEFAULT '0' NOT NULL, iclicks int(10) unsigned DEFAULT '0' NOT NULL, uclicks int(10) unsigned DEFAULT '0' NOT NULL, ts timestamp, PRIMARY KEY (place_id,ts) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 (place_id,shows,ishows,ushows,clicks,iclicks,uclicks,ts) VALUES (1,0,0,0,0,0,0,20000928174434);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "place_id"
      },
      {
        "column": "shows"
      },
      {
        "column": "ishows"
      },
      {
        "column": "ushows"
      },
      {
        "column": "clicks"
      },
      {
        "column": "iclicks"
      },
      {
        "column": "uclicks"
      },
      {
        "column": "ts"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "UPDATE t1 SET shows=shows+1,ishows=ishows+1,ushows=ushows+1,clicks=clicks+1,iclicks=iclicks+1,uclicks=uclicks+1 WHERE place_id=1 AND ts>=\"2000-09-28 00:00:00\";",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "shows"
      },
      {
        "column": "ishows"
      },
      {
        "column": "ushows"
      },
      {
        "column": "clicks"
      },
      {
        "column": "iclicks"
      },
      {
        "column": "uclicks"
      },
      {
        "column": "place_id"
      },
      {
        "column": "ts"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "shows"
          },
          {
            "column": "ishows"
          },
          {
            "column": "ushows"
          },
          {
            "column": "clicks"
          },
          {
            "column": "iclicks"
          },
          {
            "column": "uclicks"
          },
          {
            "column": "place_id"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "shows"
          },
          {
            "column": "ishows"
          },
          {
            "column": "ushows"
          },
          {
            "column": "clicks"
          },
          {
            "column": "iclicks"
          },
          {
            "column": "uclicks"
          }
        ]
      },
      {
        "name": ">=",
        "fields": [
          {
            "column": "ts"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select place_id,shows from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "place_id"
      },
      {
        "column": "shows"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( lfdnr int(10) unsigned NOT NULL default '0', ticket int(10) unsigned NOT NULL default '0', client varchar(255) NOT NULL default '', replyto varchar(255) NOT NULL default '', subject varchar(100) NOT NULL default '', timestamp int(10) unsigned NOT NULL default '0', tstamp timestamp NOT NULL, status int(3) NOT NULL default '0', type varchar(15) NOT NULL default '', assignment int(10) unsigned NOT NULL default '0', fupcount int(4) unsigned NOT NULL default '0', parent int(10) unsigned NOT NULL default '0', activity int(10) unsigned NOT NULL default '0', priority tinyint(1) unsigned NOT NULL default '1', cc varchar(255) NOT NULL default '', bcc varchar(255) NOT NULL default '', body text NOT NULL, comment text, header text, PRIMARY KEY  (lfdnr), KEY k1 (timestamp), KEY k2 (type), KEY k3 (parent), KEY k4 (assignment), KEY ticket (ticket) ) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (773,773,'','','',980257344,20010318180652,0,'Open',10,0,0,0,1,'','','','','');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "alter table t1 change lfdnr lfdnr int(10) unsigned not null auto_increment;",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_ALTER_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set status=1 where type='Open';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "status"
      },
      {
        "column": "type"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "status"
          },
          {
            "column": "type"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select status from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "status"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a int not null, b int not null, key (a));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (1,1),(1,2),(1,3),(3,1),(3,2),(3,3),(3,1),(3,2),(3,3),(2,1),(2,2),(2,3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SET @tmp=0;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE|sql::TYPE_USERVAR_WRITE"
  }
}

{
  "statement": "update t1 set b=(@tmp:=@tmp+1) order by a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          }
        ]
      },
      {
        "name": "+",
        "fields": []
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_USERVAR_WRITE|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "update t1 set b=99 where a=1 order by b asc limit 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1 order by a,b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "update t1 set b=100 where a=1 order by b desc limit 2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1 order by a,b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "create table t2 (a int not null, b int not null);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values (1,1),(1,2),(1,3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set b=(select distinct 1 from (select * from t2) a);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "*",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( `id_param` smallint(3) unsigned NOT NULL default '0', `nom_option` char(40) NOT NULL default '', `valid` tinyint(1) NOT NULL default '0', KEY `id_param` (`id_param`,`nom_option`) ) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 (id_param,nom_option,valid) VALUES (185,'600x1200',1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "id_param"
      },
      {
        "column": "nom_option"
      },
      {
        "column": "valid"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "UPDATE t1 SET nom_option='test' WHERE id_param=185 AND nom_option='600x1200' AND valid=1 LIMIT 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "nom_option",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "id_param",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "valid",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "nom_option"
          },
          {
            "column": "id_param"
          },
          {
            "column": "valid"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (F1 VARCHAR(30), F2 VARCHAR(30), F3 VARCHAR(30), cnt int, groupid int, KEY groupid_index (groupid));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 (F1,F2,F3,cnt,groupid) values ('0','0','0',1,6), ('0','1','2',1,5), ('0','2','0',1,3), ('1','0','1',1,2), ('1','2','1',1,1), ('1','2','2',1,1), ('2','0','1',2,4), ('2','2','0',1,7);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "F1"
      },
      {
        "column": "F2"
      },
      {
        "column": "F3"
      },
      {
        "column": "cnt"
      },
      {
        "column": "groupid"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "delete from m1 using t1 m1,t1 m2 where m1.groupid=m2.groupid and (m1.cnt < m2.cnt or m1.cnt=m2.cnt and m1.F3>m2.F3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "groupid"
      },
      {
        "table": "t1",
        "column": "cnt"
      },
      {
        "table": "t1",
        "column": "F3"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "groupid"
          },
          {
            "table": "t1",
            "column": "cnt"
          }
        ]
      },
      {
        "name": "<",
        "fields": [
          {
            "table": "t1",
            "column": "cnt"
          }
        ]
      },
      {
        "name": ">",
        "fields": [
          {
            "table": "t1",
            "column": "F3"
          }
        ]
      }
    ],
    "operation": "sql::OP_DELETE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( `colA` int(10) unsigned NOT NULL auto_increment, `colB` int(11) NOT NULL default '0', PRIMARY KEY  (`colA`) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (4433,5424);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 ( `colC` int(10) unsigned NOT NULL default '0', `colA` int(10) unsigned NOT NULL default '0', `colD` int(10) unsigned NOT NULL default '0', `colE` int(10) unsigned NOT NULL default '0', `colF` int(10) unsigned NOT NULL default '0', PRIMARY KEY  (`colC`,`colA`,`colD`,`colE`) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (3,4433,10005,495,500);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (3,4433,10005,496,500);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (3,4433,10009,494,500);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (3,4433,10011,494,500);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (3,4433,10005,497,500);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (3,4433,10013,489,500);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (3,4433,10005,494,500);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (3,4433,10005,493,500);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (3,4433,10005,492,500);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "UPDATE IGNORE t2,t1 set t2.colE = t2.colE + 1,colF=0 WHERE t1.colA = t2.colA AND (t1.colB & 4096) > 0 AND (t2.colE + 1) < colF;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "colE"
      },
      {
        "column": "colF"
      },
      {
        "table": "t1",
        "column": "colA"
      },
      {
        "table": "t2",
        "column": "colA"
      },
      {
        "table": "t1",
        "column": "colB"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "colE"
          },
          {
            "column": "colF"
          },
          {
            "table": "t1",
            "column": "colA"
          },
          {
            "table": "t2",
            "column": "colA"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "table": "t2",
            "column": "colE"
          }
        ]
      },
      {
        "name": ">",
        "fields": []
      },
      {
        "name": "&",
        "fields": [
          {
            "table": "t1",
            "column": "colB"
          }
        ]
      },
      {
        "name": "<",
        "fields": [
          {
            "column": "colF"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (c1 int, c2 char(6), c3 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (c1 int, c2 char(6));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (1, \"t1c2-1\", 10), (2, \"t1c2-2\", 20);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 left join t2 on t1.c1 = t2.c1 set t2.c2 = \"t2c2-1\";",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "c1"
      },
      {
        "table": "t2",
        "column": "c1"
      },
      {
        "table": "t2",
        "column": "c2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "c1"
          },
          {
            "table": "t2",
            "column": "c1"
          },
          {
            "table": "t2",
            "column": "c2"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 left join t2 on t1.c1 = t2.c1 set t2.c2 = \"t2c2-1\" where t1.c3 = 10;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "c1"
      },
      {
        "table": "t2",
        "column": "c1"
      },
      {
        "table": "t2",
        "column": "c2"
      },
      {
        "table": "t1",
        "column": "c3"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "c1"
          },
          {
            "table": "t2",
            "column": "c1"
          },
          {
            "table": "t2",
            "column": "c2"
          },
          {
            "table": "t1",
            "column": "c3"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (id int not null auto_increment primary key, id_str varchar(32));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 (id_str) values (\"test\");",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "id_str"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set id_str = concat(id_str, id) where id = last_insert_id();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "id_str"
      },
      {
        "column": "id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "id_str"
          },
          {
            "column": "id"
          }
        ]
      },
      {
        "name": "concat",
        "fields": [
          {
            "column": "id_str"
          },
          {
            "column": "id"
          }
        ]
      },
      {
        "name": "last_insert_id",
        "fields": []
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_MASTER_READ"
  }
}

{
  "statement": "select * from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a int, b char(255), key(a, b(20)));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (0, '1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set b = b + 1 where a = 0;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "a"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a int, b varchar(10), key b(b(5))) engine=myisam;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (a int, b varchar(10)) engine=myisam;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values ( 1, 'abcd1e');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values ( 2, 'abcd2e');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values ( 1, 'abcd1e');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values ( 2, 'abcd2e');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "analyze table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1, t2 set t1.a = t2.a where t2.b = t1.b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "b"
      },
      {
        "table": "t1",
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "b"
          },
          {
            "table": "t1",
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "show warnings;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1(f1 int, f2 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2(f3 int, f4 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create index idx on t2(f3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values(1,0),(2,0);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values(1,1),(2,2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "UPDATE t1 SET t1.f2=(SELECT MAX(t2.f4) FROM t2 WHERE t2.f3=t1.f1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "f2"
      },
      {
        "table": "t2",
        "column": "f4",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t2",
        "column": "f3",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t1",
        "column": "f1",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "f2"
          },
          {
            "table": "t2",
            "column": "f3"
          },
          {
            "table": "t1",
            "column": "f1"
          }
        ]
      },
      {
        "name": "MAX",
        "fields": [
          {
            "table": "t2",
            "column": "f4"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1(f1 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select DATABASE();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "function_info": [
      {
        "name": "DATABASE",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select DATABASE();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "function_info": [
      {
        "name": "DATABASE",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 ( a int, b int default 0, index (a) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 (a) values (0),(0),(0),(0),(0),(0),(0),(0);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "flush status;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select a from t1 order by a limit 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "show status like 'handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "flush status;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set a=9999 order by a limit 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set b=9999 order by a limit 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "show status like 'handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "flush status;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "delete from t1 order by a limit 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "operation": "sql::OP_DELETE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "show status like 'handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "flush status;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "delete from t1 order by a desc limit 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "operation": "sql::OP_DELETE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "show status like 'handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "alter table t1 disable keys;",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_ALTER_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "flush status;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "delete from t1 order by a limit 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "operation": "sql::OP_DELETE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "show status like 'handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "update t1 set a=a+10,b=1 order by a limit 3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          },
          {
            "column": "b"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set a=a+11,b=2 order by a limit 3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          },
          {
            "column": "b"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set a=a+12,b=3 order by a limit 3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          },
          {
            "column": "b"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1 order by a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (f1 date not null);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values('2000-01-01'),('0000-00-00');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set f1='2002-02-02' where f1 is null;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "f1"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "f1"
          }
        ]
      },
      {
        "name": "isnull",
        "fields": [
          {
            "column": "f1"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (f1 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (f2 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values(1),(2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values(1),(1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1,t2 set f1=3,f2=3 where f1=f2 and f1=1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "f1"
      },
      {
        "column": "f2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "f1"
          },
          {
            "column": "f2"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t2 set f2=1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "f2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "f2"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set f1=1 where f1=3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "f1"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "f1"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t2,t1 set f1=3,f2=3 where f1=f2 and f1=1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "f1"
      },
      {
        "column": "f2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "f1"
          },
          {
            "column": "f2"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (a int, filler1 char(200), filler2 char(200), key(a));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 select A.a + 10*B.a, 'filler','filler' from t1 A, t1 B;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          }
        ]
      },
      {
        "name": "*",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "flush status;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t2 set a=3 where a=2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "show status like 'handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1(f1 int, `*f2` int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (1,1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set `*f2`=1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*f2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "*f2"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1(f1 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( request_id int unsigned NOT NULL auto_increment, user_id varchar(12) default NULL, time_stamp datetime NOT NULL default '0000-00-00 00:00:00', ip_address varchar(15) default NULL, PRIMARY KEY (request_id), KEY user_id_2 (user_id,time_stamp) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 (user_id) VALUES ('user1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1(user_id) SELECT user_id FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1(user_id) SELECT user_id FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1(user_id) SELECT user_id FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1(user_id) SELECT user_id FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1(user_id) SELECT user_id FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1(user_id) SELECT user_id FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1(user_id) SELECT user_id FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1(user_id) SELECT user_id FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "flush status;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT user_id FROM t1 WHERE request_id=9999999999999;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      },
      {
        "column": "request_id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "request_id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "show status like '%Handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT user_id FROM t1 WHERE request_id=999999999999999999999999999999;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      },
      {
        "column": "request_id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "request_id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "show status like '%Handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "UPDATE t1 SET user_id=null WHERE request_id=9999999999999;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      },
      {
        "column": "request_id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "user_id"
          },
          {
            "column": "request_id"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "show status like '%Handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "UPDATE t1 SET user_id=null WHERE request_id=999999999999999999999999999999;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "user_id"
      },
      {
        "column": "request_id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "user_id"
          },
          {
            "column": "request_id"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "show status like '%Handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( a INT(11), quux decimal( 31, 30 ), UNIQUE KEY bar (a), KEY quux (quux) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 ( a, quux ) VALUES ( 1,    1 ), ( 2,  0.1 );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "quux"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1( a ) SELECT @newA := 1 + a FROM t1 WHERE quux <= 0.1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "quux"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      },
      {
        "name": "<=",
        "fields": [
          {
            "column": "quux"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_USERVAR_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "set tmp_table_size=1024;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "create table t1 (id int, a int, key idx(a));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (id int unsigned not null auto_increment primary key, a int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2(a) values(1),(2),(3),(4),(5),(6),(7),(8);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2(a) select a from t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2(a) select a from t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2(a) select a from t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 select * from t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select count(*) from t1 join t2 on (t1.a=t2.a);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "a"
          }
        ]
      },
      {
        "name": "count",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "update t1 join t2 on (t1.a=t2.a) set t1.id=t2.id;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "a"
      },
      {
        "table": "t1",
        "column": "id"
      },
      {
        "table": "t2",
        "column": "id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "a"
          },
          {
            "table": "t1",
            "column": "id"
          },
          {
            "table": "t2",
            "column": "id"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2(a) select a from t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "truncate t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_TRUNCATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 select * from t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select count(*) from t1 join t2 on (t1.a=t2.a);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "a"
          }
        ]
      },
      {
        "name": "count",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "update t1 join t2 on (t1.a=t2.a) set t1.id=t2.id;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "a"
      },
      {
        "table": "t1",
        "column": "id"
      },
      {
        "table": "t2",
        "column": "id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "a"
          },
          {
            "table": "t1",
            "column": "id"
          },
          {
            "table": "t2",
            "column": "id"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set a=1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t2 set a=1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select count(*) from t1 join t2 on (t1.a=t2.a);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "a"
          }
        ]
      },
      {
        "name": "count",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "update t1 join t2 on (t1.a=t2.a) set t1.id=t2.id;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "a"
      },
      {
        "table": "t1",
        "column": "id"
      },
      {
        "table": "t2",
        "column": "id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "a"
          },
          {
            "table": "t1",
            "column": "id"
          },
          {
            "table": "t2",
            "column": "id"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE IF EXISTS t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION IF EXISTS f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1() RETURNS INT RETURN f1();",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (i INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (f1 INTEGER AUTO_INCREMENT, PRIMARY KEY (f1));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TEMPORARY TABLE t2 LIKE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_CREATE_TMP_TABLE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "ALTER TABLE t2 COMMENT = 'ABC';",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_ALTER_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "UPDATE t2, t1 SET t2.f1 = 2, t1.f1 = 9;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "f1"
      },
      {
        "table": "t1",
        "column": "f1"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "f1"
          },
          {
            "table": "t1",
            "column": "f1"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "ALTER TABLE t2 COMMENT = 'DEF';",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_ALTER_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( a INT, KEY( a ) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (0), (1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE VIEW v1 AS SELECT t11.a, t12.a AS b FROM t1 t11, t1 t12;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SET SESSION sql_safe_updates = 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "SET SESSION sql_safe_updates = DEFAULT;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP VIEW v1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE IF EXISTS t1, not_exists;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "not_exists"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION IF EXISTS f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP VIEW IF EXISTS v1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (PRIMARY KEY(pk)) AS SELECT 1 AS pk;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1() RETURNS INTEGER RETURN (SELECT 1 FROM not_exists);",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE VIEW v1 AS SELECT pk FROM t1 WHERE f1() = 13;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "pk"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": []
      },
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP VIEW v1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a VARCHAR(50), b TEXT, c CHAR(50)) ENGINE=INNODB;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 (a, b, c) VALUES ('start trail', '', 'even longer string');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "b"
      },
      {
        "column": "c"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "UPDATE t1 SET b = a, a = 'inject';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT a, b FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "UPDATE t1 SET b = c, c = 'inject';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "c"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT c, b FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "c"
      },
      {
        "column": "b"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (i INT) ENGINE=INNODB;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10),(11),(12),(13),(14),(15),(16),(17),(18),(19), (20),(21),(22),(23),(24),(25),(26),(27),(28),(29), (30),(31),(32),(33),(34),(35);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (a CHAR(2), b CHAR(2), c CHAR(2), d CHAR(2), INDEX idx (a,b(1),c)) ENGINE=INNODB;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 SELECT i, i, i, i FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "i"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "FLUSH STATUS; # FLUSH is autocommit, so we put it outside of transaction\n START TRANSACTION;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "UPDATE t2 SET d = 10 WHERE b = 10 LIMIT 5;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "d"
      },
      {
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "d"
          },
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SHOW STATUS LIKE 'HANDLER_UPDATE';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "ROLLBACK;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "trx_type_mask": "sql::TYPE_ROLLBACK",
    "type_mask": "sql::TYPE_ROLLBACK"
  }
}

{
  "statement": "FLUSH STATUS;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "START TRANSACTION;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "trx_type_mask": "sql::TYPE_BEGIN_TRX",
    "type_mask": "sql::TYPE_BEGIN_TRX"
  }
}

{
  "statement": "UPDATE t2 SET d = 10 WHERE b = 10 ORDER BY a, c LIMIT 5;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "d"
      },
      {
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "c",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "d"
          },
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SHOW STATUS LIKE 'HANDLER_UPDATE';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "ROLLBACK;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "trx_type_mask": "sql::TYPE_ROLLBACK",
    "type_mask": "sql::TYPE_ROLLBACK"
  }
}

{
  "statement": "ALTER TABLE t2 DROP INDEX idx, ADD INDEX idx2 (a, b);",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_ALTER_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "FLUSH STATUS;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "START TRANSACTION;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "trx_type_mask": "sql::TYPE_BEGIN_TRX",
    "type_mask": "sql::TYPE_BEGIN_TRX"
  }
}

{
  "statement": "UPDATE t2 SET c = 10 LIMIT 5;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "c"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SHOW STATUS LIKE 'HANDLER_UPDATE';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "ROLLBACK;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "trx_type_mask": "sql::TYPE_ROLLBACK",
    "type_mask": "sql::TYPE_ROLLBACK"
  }
}

{
  "statement": "FLUSH STATUS;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "START TRANSACTION;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "trx_type_mask": "sql::TYPE_BEGIN_TRX",
    "type_mask": "sql::TYPE_BEGIN_TRX"
  }
}

{
  "statement": "UPDATE t2 SET c = 10 ORDER BY a, b DESC LIMIT 5;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "c"
      },
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SHOW STATUS LIKE 'HANDLER_UPDATE';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "ROLLBACK;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "trx_type_mask": "sql::TYPE_ROLLBACK",
    "type_mask": "sql::TYPE_ROLLBACK"
  }
}

{
  "statement": "DROP TABLE t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE `t1` ( `name` varchar(255) NOT NULL, `value` varchar(4095) DEFAULT NULL, PRIMARY KEY (`name`) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "UPDATE `t1` SET value = CONCAT(\"*.\",(SELECT `temptable`.`value` FROM (SELECT * FROM `t1` WHERE `name`=\"consoleproxy.url.domain\") AS `temptable` WHERE `temptable`.`name`=\"consoleproxy.url.domain\")) WHERE `name`=\"consoleproxy.url.domain\";",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "value"
      },
      {
        "column": "*",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "name",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "temptable",
        "column": "value",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "temptable",
        "column": "name",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "value"
          },
          {
            "column": "name"
          },
          {
            "table": "temptable",
            "column": "name"
          }
        ]
      },
      {
        "name": "CONCAT",
        "fields": []
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE `t1` ( `name` varchar(255) NOT NULL, `value` varchar(4095) DEFAULT NULL, PRIMARY KEY (`name`) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 ( `name` varchar(255) NOT NULL, `value` varchar(4095) DEFAULT NULL, PRIMARY KEY (`name`) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "UPDATE t1 SET value = (SELECT value FROM t2 WHERE `name`= t1.name) WHERE value is null ;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "value",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "name",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t1",
        "column": "name",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "value"
          },
          {
            "column": "name"
          },
          {
            "table": "t1",
            "column": "name"
          }
        ]
      },
      {
        "name": "isnull",
        "fields": [
          {
            "column": "value"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( data_exit_entry_id int(11) NOT NULL, data_entry_id int(11) NOT NULL, data_entry_exit_id int(11) NOT NULL, data_exit_entry_quantity double NOT NULL ) DEFAULT CHARSET=utf8;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 ( data_entry_id int(11) NOT NULL, data_entry_cost double NOT NULL, data_entry_quantity double NOT NULL ) DEFAULT CHARSET=utf8;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create  algorithm=temptable view v1 as SELECT data_entry_exit_id, data_exit_entry_quantity, data_entry_cost FROM t1 INNER JOIN t2 as dt ON dt.data_entry_id = t1.data_entry_id;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "data_entry_id"
      },
      {
        "table": "t1",
        "column": "data_entry_id"
      },
      {
        "column": "data_entry_exit_id"
      },
      {
        "column": "data_exit_entry_quantity"
      },
      {
        "column": "data_entry_cost"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "data_entry_id"
          },
          {
            "table": "t1",
            "column": "data_entry_id"
          }
        ]
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "UPDATE t2 SET data_entry_cost = ( ( SELECT SUM(data_exit_entry_quantity * data_entry_cost) FROM v1 AS query WHERE data_entry_exit_id = t2.data_entry_id ) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "data_entry_cost",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "data_exit_entry_quantity",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "data_entry_exit_id",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t2",
        "column": "data_entry_id",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "data_entry_cost"
          },
          {
            "column": "data_entry_exit_id"
          },
          {
            "table": "t2",
            "column": "data_entry_id"
          }
        ]
      },
      {
        "name": "SUM",
        "fields": []
      },
      {
        "name": "*",
        "fields": [
          {
            "column": "data_exit_entry_quantity"
          },
          {
            "column": "data_entry_cost"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2(a int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (key1 int, col1 int, key(key1));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 select A.a + 10 * B.a + 100 * C.a, 1234 from t2 A, t2 B, t2 C;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "table": "t2",
            "column": "a"
          }
        ]
      },
      {
        "name": "*",
        "fields": [
          {
            "table": "t2",
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "explain update t1 set key1=key1+1 where key1 between 10 and 110 order by key1 limit 2;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "flush status;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "update t1 set key1=key1+1 where key1 between 10 and 110 order by key1 limit 2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "key1",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "key1"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "key1"
          }
        ]
      },
      {
        "name": "between",
        "fields": [
          {
            "column": "key1"
          }
        ]
      }
    ],
    "operation": "sql::OP_UPDATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "show status like 'Handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

