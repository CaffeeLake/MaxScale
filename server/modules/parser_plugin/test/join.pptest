{
  "statement": "drop table if exists t1,t2,t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view if exists v1,v2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      },
      {
        "table": "v2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SET @save_optimizer_switch=@@optimizer_switch;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE|sql::TYPE_USERVAR_WRITE"
  }
}

{
  "statement": "SET optimizer_switch='outer_join_with_cache=off';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (S1 INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (S1 INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1 JOIN t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 INNER JOIN t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * from t1 JOIN t2 USING (S1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 INNER JOIN t2 USING (S1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * from t1 CROSS JOIN t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * from t1 LEFT JOIN t2 USING(S1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * from t1 LEFT JOIN t2 ON(t2.S1=2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "S1"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "S1"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * from t1 RIGHT JOIN t2 USING(S1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * from t1 RIGHT JOIN t2 ON(t1.S1=1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "S1"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "S1"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (id int primary key);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (id int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (75);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (79);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (78);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (77);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "replace into t1 values (76);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "replace into t1 values (76);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (104);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (103);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (102);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (101);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (105);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (106);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (107);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values (107),(75),(1000);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select t1.id, t2.id from t1, t2 where t2.id = t1.id;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "id"
      },
      {
        "table": "t2",
        "column": "id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "id"
          },
          {
            "table": "t1",
            "column": "id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select t1.id, count(t2.id) from t1,t2 where t2.id = t1.id group by t1.id;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "id"
      },
      {
        "table": "t2",
        "column": "id"
      }
    ],
    "function_info": [
      {
        "name": "count",
        "fields": [
          {
            "table": "t2",
            "column": "id"
          }
        ]
      },
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "id"
          },
          {
            "table": "t1",
            "column": "id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select t1.id, count(t2.id) from t1,t2 where t2.id = t1.id group by t2.id;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "id"
      },
      {
        "table": "t2",
        "column": "id"
      }
    ],
    "function_info": [
      {
        "name": "count",
        "fields": [
          {
            "table": "t2",
            "column": "id"
          }
        ]
      },
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "id"
          },
          {
            "table": "t1",
            "column": "id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select t1.id,t2.id from t2 left join t1 on t1.id>=74 and t1.id<=0 where t2.id=75 and t1.id is null;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "id"
      },
      {
        "table": "t2",
        "column": "id"
      }
    ],
    "function_info": [
      {
        "name": ">=",
        "fields": [
          {
            "table": "t1",
            "column": "id"
          }
        ]
      },
      {
        "name": "<=",
        "fields": [
          {
            "table": "t1",
            "column": "id"
          }
        ]
      },
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "id"
          }
        ]
      },
      {
        "name": "isnull",
        "fields": [
          {
            "table": "t1",
            "column": "id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "explain select t1.id,t2.id from t2 left join t1 on t1.id>=74 and t1.id<=0 where t2.id=75 and t1.id is null;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "explain select t1.id, t2.id from t1, t2 where t2.id = t1.id and t1.id <0 and t1.id > 0;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( id int(11) NOT NULL auto_increment, token varchar(100) DEFAULT '' NOT NULL, count int(11) DEFAULT '0' NOT NULL, qty int(11), phone char(1) DEFAULT '' NOT NULL, timestamp datetime DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY (id), KEY token (token(15)), KEY timestamp (timestamp), UNIQUE token_2 (token(75),count,phone) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (21,'e45703b64de71482360de8fec94c3ade',3,7800,'n','1999-12-23 17:22:21');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (22,'e45703b64de71482360de8fec94c3ade',4,5000,'y','1999-12-23 17:22:21');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (18,'346d1cb63c89285b2351f0ca4de40eda',3,13200,'b','1999-12-23 11:58:04');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (17,'ca6ddeb689e1b48a04146b1b5b6f936a',4,15000,'b','1999-12-23 11:36:53');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (16,'ca6ddeb689e1b48a04146b1b5b6f936a',3,13200,'b','1999-12-23 11:36:53');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (26,'a71250b7ed780f6ef3185bfffe027983',5,1500,'b','1999-12-27 09:44:24');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (24,'4d75906f3c37ecff478a1eb56637aa09',3,5400,'y','1999-12-23 17:29:12');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (25,'4d75906f3c37ecff478a1eb56637aa09',4,6500,'y','1999-12-23 17:29:12');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (27,'a71250b7ed780f6ef3185bfffe027983',3,6200,'b','1999-12-27 09:44:24');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (28,'a71250b7ed780f6ef3185bfffe027983',3,5400,'y','1999-12-27 09:44:36');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (29,'a71250b7ed780f6ef3185bfffe027983',4,17700,'b','1999-12-27 09:45:05');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 ( id int(11) NOT NULL auto_increment, category int(11) DEFAULT '0' NOT NULL, county int(11) DEFAULT '0' NOT NULL, state int(11) DEFAULT '0' NOT NULL, phones int(11) DEFAULT '0' NOT NULL, nophones int(11) DEFAULT '0' NOT NULL, PRIMARY KEY (id), KEY category (category,county,state) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (3,2,11,12,5400,7800);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (4,2,25,12,6500,11200);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (5,1,37,6,10000,12000);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select a.id, b.category as catid, b.state as stateid, b.county as countyid from t1 a, t2 b ignore index (primary) where (a.token ='a71250b7ed780f6ef3185bfffe027983') and (a.count = b.id);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "id"
      },
      {
        "table": "t2",
        "column": "category"
      },
      {
        "table": "t2",
        "column": "state"
      },
      {
        "table": "t2",
        "column": "county"
      },
      {
        "table": "t1",
        "column": "token"
      },
      {
        "table": "t1",
        "column": "count"
      },
      {
        "table": "t2",
        "column": "id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "token"
          },
          {
            "table": "t1",
            "column": "count"
          },
          {
            "table": "t2",
            "column": "id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select a.id, b.category as catid, b.state as stateid, b.county as countyid from t1 a, t2 b where (a.token = 'a71250b7ed780f6ef3185bfffe027983') and (a.count = b.id) order by a.id;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "id"
      },
      {
        "table": "t2",
        "column": "category"
      },
      {
        "table": "t2",
        "column": "state"
      },
      {
        "table": "t2",
        "column": "county"
      },
      {
        "table": "t1",
        "column": "token"
      },
      {
        "table": "t1",
        "column": "count"
      },
      {
        "table": "t2",
        "column": "id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "token"
          },
          {
            "table": "t1",
            "column": "count"
          },
          {
            "table": "t2",
            "column": "id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a int primary key);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values(1),(2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select t1.a from t1 as t1 left join t1 as t2 using (a) left join t1 as t3 using (a) left join t1 as t4 using (a) left join t1 as t5 using (a) left join t1 as t6 using (a) left join t1 as t7 using (a) left join t1 as t8 using (a) left join t1 as t9 using (a) left join t1 as t10 using (a) left join t1 as t11 using (a) left join t1 as t12 using (a) left join t1 as t13 using (a) left join t1 as t14 using (a) left join t1 as t15 using (a) left join t1 as t16 using (a) left join t1 as t17 using (a) left join t1 as t18 using (a) left join t1 as t19 using (a) left join t1 as t20 using (a) left join t1 as t21 using (a) left join t1 as t22 using (a) left join t1 as t23 using (a) left join t1 as t24 using (a) left join t1 as t25 using (a) left join t1 as t26 using (a) left join t1 as t27 using (a) left join t1 as t28 using (a) left join t1 as t29 using (a) left join t1 as t30 using (a) left join t1 as t31 using (a);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select a from t1 as t1 left join t1 as t2 using (a) left join t1 as t3 using (a) left join t1 as t4 using (a) left join t1 as t5 using (a) left join t1 as t6 using (a) left join t1 as t7 using (a) left join t1 as t8 using (a) left join t1 as t9 using (a) left join t1 as t10 using (a) left join t1 as t11 using (a) left join t1 as t12 using (a) left join t1 as t13 using (a) left join t1 as t14 using (a) left join t1 as t15 using (a) left join t1 as t16 using (a) left join t1 as t17 using (a) left join t1 as t18 using (a) left join t1 as t19 using (a) left join t1 as t20 using (a) left join t1 as t21 using (a) left join t1 as t22 using (a) left join t1 as t23 using (a) left join t1 as t24 using (a) left join t1 as t25 using (a) left join t1 as t26 using (a) left join t1 as t27 using (a) left join t1 as t28 using (a) left join t1 as t29 using (a) left join t1 as t30 using (a) left join t1 as t31 using (a);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( a int(11) NOT NULL, b int(11) NOT NULL, PRIMARY KEY  (a,b) ) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(2,3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 ( a int(11) default NULL ) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (2),(3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT t1.a,t2.a,b FROM t1,t2 WHERE t1.a=t2.a AND (t1.a=1 OR t1.a=2) AND b>=1 AND b<=3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "a"
          }
        ]
      },
      {
        "name": ">=",
        "fields": [
          {
            "column": "b"
          }
        ]
      },
      {
        "name": "<=",
        "fields": [
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (d DATE NOT NULL);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (d DATE NOT NULL);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 (d) VALUES ('2001-08-01'),('0000-00-00');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "d"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1 LEFT JOIN t2 USING (d) WHERE t2.d IS NULL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t2",
        "column": "d"
      }
    ],
    "function_info": [
      {
        "name": "isnull",
        "fields": [
          {
            "table": "t2",
            "column": "d"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 LEFT JOIN t2 USING (d) WHERE d IS NULL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "column": "d"
      }
    ],
    "function_info": [
      {
        "name": "isnull",
        "fields": [
          {
            "column": "d"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * from t1 WHERE t1.d IS NULL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t1",
        "column": "d"
      }
    ],
    "function_info": [
      {
        "name": "isnull",
        "fields": [
          {
            "table": "t1",
            "column": "d"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 WHERE 1/0 IS NULL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "isnull",
        "fields": []
      },
      {
        "name": "/",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( Document_ID varchar(50) NOT NULL default '', Contractor_ID varchar(6) NOT NULL default '', Language_ID char(3) NOT NULL default '', Expiration_Date datetime default NULL, Publishing_Date datetime default NULL, Title text, Column_ID varchar(50) NOT NULL default '', PRIMARY KEY  (Language_ID,Document_ID,Contractor_ID) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('xep80','1','ger','2001-12-31 20:00:00','2001-11-12 10:58:00','Kartenbestellung - jetzt auch online','anle'),('','999998','',NULL,NULL,NULL,'');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 ( Contractor_ID char(6) NOT NULL default '', Language_ID char(3) NOT NULL default '', Document_ID char(50) NOT NULL default '', CanRead char(1) default NULL, Customer_ID int(11) NOT NULL default '0', PRIMARY KEY  (Contractor_ID,Language_ID,Document_ID,Customer_ID) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES ('5','ger','xep80','1',999999),('1','ger','xep80','1',999999);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t3 ( Language_ID char(3) NOT NULL default '', Column_ID char(50) NOT NULL default '', Contractor_ID char(6) NOT NULL default '', CanRead char(1) default NULL, Active char(1) default NULL, PRIMARY KEY  (Language_ID,Column_ID,Contractor_ID) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t3 VALUES ('ger','home','1','1','1'),('ger','Test','1','0','0'),('ger','derclu','1','0','0'),('ger','clubne','1','0','0'),('ger','philos','1','0','0'),('ger','clubko','1','0','0'),('ger','clubim','1','1','1'),('ger','progra','1','0','0'),('ger','progvo','1','0','0'),('ger','progsp','1','0','0'),('ger','progau','1','0','0'),('ger','progku','1','0','0'),('ger','progss','1','0','0'),('ger','nachl','1','0','0'),('ger','mitgli','1','0','0'),('ger','mitsu','1','0','0'),('ger','mitbus','1','0','0'),('ger','ergmar','1','1','1'),('ger','home','4','1','1'),('ger','derclu','4','1','1'),('ger','clubne','4','0','0'),('ger','philos','4','1','1'),('ger','clubko','4','1','1'),('ger','clubim','4','1','1'),('ger','progra','4','1','1'),('ger','progvo','4','1','1'),('ger','progsp','4','1','1'),('ger','progau','4','0','0'),('ger','progku','4','1','1'),('ger','progss','4','1','1'),('ger','nachl','4','1','1'),('ger','mitgli','4','0','0'),('ger','mitsu','4','0','0'),('ger','mitbus','4','0','0'),('ger','ergmar','4','1','1'),('ger','progra2','1','0','0'),('ger','archiv','4','1','1'),('ger','anmeld','4','1','1'),('ger','thema','4','1','1'),('ger','edito','4','1','1'),('ger','madis','4','1','1'),('ger','enma','4','1','1'),('ger','madis','1','1','1'),('ger','enma','1','1','1'),('ger','vorsch','4','0','0'),('ger','veranst','4','0','0'),('ger','anle','4','1','1'),('ger','redak','4','1','1'),('ger','nele','4','1','1'),('ger','aukt','4','1','1'),('ger','callcenter','4','1','1'),('ger','anle','1','0','0');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "delete from t1 where Contractor_ID='999998';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "Contractor_ID"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "Contractor_ID"
          }
        ]
      }
    ],
    "operation": "sql::OP_DELETE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 (Contractor_ID) Values ('999998');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "Contractor_ID"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT DISTINCT COUNT(t1.Title) FROM t1, t2, t3 WHERE t1.Document_ID='xep80' AND t1.Contractor_ID='1' AND t1.Language_ID='ger' AND '2001-12-21 23:14:24' >= Publishing_Date AND '2001-12-21 23:14:24' <= Expiration_Date AND t1.Document_ID = t2.Document_ID AND t1.Language_ID = t2.Language_ID AND t1.Contractor_ID = t2.Contractor_ID AND ( t2.Customer_ID = '4'  OR t2.Customer_ID = '999999'  OR t2.Customer_ID = '1' )AND t2.CanRead = '1'  AND t1.Column_ID=t3.Column_ID AND t1.Language_ID=t3.Language_ID AND ( t3.Contractor_ID = '4'  OR t3.Contractor_ID = '999999'  OR t3.Contractor_ID = '1') AND t3.CanRead='1' AND t3.Active='1';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "Title"
      },
      {
        "table": "t1",
        "column": "Document_ID"
      },
      {
        "table": "t1",
        "column": "Contractor_ID"
      },
      {
        "table": "t1",
        "column": "Language_ID"
      },
      {
        "column": "Publishing_Date"
      },
      {
        "column": "Expiration_Date"
      },
      {
        "table": "t2",
        "column": "Document_ID"
      },
      {
        "table": "t2",
        "column": "Language_ID"
      },
      {
        "table": "t2",
        "column": "Contractor_ID"
      },
      {
        "table": "t2",
        "column": "Customer_ID"
      },
      {
        "table": "t2",
        "column": "CanRead"
      },
      {
        "table": "t1",
        "column": "Column_ID"
      },
      {
        "table": "t3",
        "column": "Column_ID"
      },
      {
        "table": "t3",
        "column": "Language_ID"
      },
      {
        "table": "t3",
        "column": "Contractor_ID"
      },
      {
        "table": "t3",
        "column": "CanRead"
      },
      {
        "table": "t3",
        "column": "Active"
      }
    ],
    "function_info": [
      {
        "name": "COUNT",
        "fields": [
          {
            "table": "t1",
            "column": "Title"
          }
        ]
      },
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "Document_ID"
          },
          {
            "table": "t1",
            "column": "Contractor_ID"
          },
          {
            "table": "t1",
            "column": "Language_ID"
          },
          {
            "table": "t2",
            "column": "Document_ID"
          },
          {
            "table": "t2",
            "column": "Language_ID"
          },
          {
            "table": "t2",
            "column": "Contractor_ID"
          },
          {
            "table": "t2",
            "column": "Customer_ID"
          },
          {
            "table": "t2",
            "column": "CanRead"
          },
          {
            "table": "t1",
            "column": "Column_ID"
          },
          {
            "table": "t3",
            "column": "Column_ID"
          },
          {
            "table": "t3",
            "column": "Language_ID"
          },
          {
            "table": "t3",
            "column": "Contractor_ID"
          },
          {
            "table": "t3",
            "column": "CanRead"
          },
          {
            "table": "t3",
            "column": "Active"
          }
        ]
      },
      {
        "name": ">=",
        "fields": [
          {
            "column": "Publishing_Date"
          }
        ]
      },
      {
        "name": "<=",
        "fields": [
          {
            "column": "Expiration_Date"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT DISTINCT COUNT(t1.Title) FROM t1, t2, t3 WHERE t1.Document_ID='xep80' AND t1.Contractor_ID='1' AND t1.Language_ID='ger' AND '2001-12-21 23:14:24' >= Publishing_Date AND '2001-12-21 23:14:24' <= Expiration_Date AND t1.Document_ID = t2.Document_ID AND t1.Language_ID = t2.Language_ID AND t1.Contractor_ID = t2.Contractor_ID AND ( t2.Customer_ID = '4'  OR t2.Customer_ID = '999999'  OR t2.Customer_ID = '1' )AND t2.CanRead = '1'  AND t1.Column_ID=t3.Column_ID AND t1.Language_ID=t3.Language_ID AND ( t3.Contractor_ID = '4'  OR t3.Contractor_ID = '999999'  OR t3.Contractor_ID = '1') AND t3.CanRead='1' AND t3.Active='1';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "Title"
      },
      {
        "table": "t1",
        "column": "Document_ID"
      },
      {
        "table": "t1",
        "column": "Contractor_ID"
      },
      {
        "table": "t1",
        "column": "Language_ID"
      },
      {
        "column": "Publishing_Date"
      },
      {
        "column": "Expiration_Date"
      },
      {
        "table": "t2",
        "column": "Document_ID"
      },
      {
        "table": "t2",
        "column": "Language_ID"
      },
      {
        "table": "t2",
        "column": "Contractor_ID"
      },
      {
        "table": "t2",
        "column": "Customer_ID"
      },
      {
        "table": "t2",
        "column": "CanRead"
      },
      {
        "table": "t1",
        "column": "Column_ID"
      },
      {
        "table": "t3",
        "column": "Column_ID"
      },
      {
        "table": "t3",
        "column": "Language_ID"
      },
      {
        "table": "t3",
        "column": "Contractor_ID"
      },
      {
        "table": "t3",
        "column": "CanRead"
      },
      {
        "table": "t3",
        "column": "Active"
      }
    ],
    "function_info": [
      {
        "name": "COUNT",
        "fields": [
          {
            "table": "t1",
            "column": "Title"
          }
        ]
      },
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "Document_ID"
          },
          {
            "table": "t1",
            "column": "Contractor_ID"
          },
          {
            "table": "t1",
            "column": "Language_ID"
          },
          {
            "table": "t2",
            "column": "Document_ID"
          },
          {
            "table": "t2",
            "column": "Language_ID"
          },
          {
            "table": "t2",
            "column": "Contractor_ID"
          },
          {
            "table": "t2",
            "column": "Customer_ID"
          },
          {
            "table": "t2",
            "column": "CanRead"
          },
          {
            "table": "t1",
            "column": "Column_ID"
          },
          {
            "table": "t3",
            "column": "Column_ID"
          },
          {
            "table": "t3",
            "column": "Language_ID"
          },
          {
            "table": "t3",
            "column": "Contractor_ID"
          },
          {
            "table": "t3",
            "column": "CanRead"
          },
          {
            "table": "t3",
            "column": "Active"
          }
        ]
      },
      {
        "name": ">=",
        "fields": [
          {
            "column": "Publishing_Date"
          }
        ]
      },
      {
        "name": "<=",
        "fields": [
          {
            "column": "Expiration_Date"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2,t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( t1_id int(11) default NULL, t2_id int(11) default NULL, type enum('Cost','Percent') default NULL, cost_unit enum('Cost','Unit') default NULL, min_value double default NULL, max_value double default NULL, t3_id int(11) default NULL, item_id int(11) default NULL ) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (12,5,'Percent','Cost',-1,0,-1,-1),(14,4,'Percent','Cost',-1,0,-1,-1),(18,5,'Percent','Cost',-1,0,-1,-1),(19,4,'Percent','Cost',-1,0,-1,-1),(20,5,'Percent','Cost',100,-1,22,291),(21,5,'Percent','Cost',100,-1,18,291),(22,1,'Percent','Cost',100,-1,6,291),(23,1,'Percent','Cost',100,-1,21,291),(24,1,'Percent','Cost',100,-1,9,291),(25,1,'Percent','Cost',100,-1,4,291),(26,1,'Percent','Cost',100,-1,20,291),(27,4,'Percent','Cost',100,-1,7,202),(28,1,'Percent','Cost',50,-1,-1,137),(29,2,'Percent','Cost',100,-1,4,354),(30,2,'Percent','Cost',100,-1,9,137),(93,2,'Cost','Cost',-1,10000000,-1,-1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 ( id int(10) unsigned NOT NULL auto_increment, name varchar(255) default NULL, PRIMARY KEY  (id) ) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (1,'s1'),(2,'s2'),(3,'s3'),(4,'s4'),(5,'s5');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select t1.*, t2.*  from t1, t2 where t2.id=t1.t2_id limit 2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "*"
      },
      {
        "table": "t2",
        "column": "*"
      },
      {
        "table": "t2",
        "column": "id"
      },
      {
        "table": "t1",
        "column": "t2_id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "id"
          },
          {
            "table": "t1",
            "column": "t2_id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( siteid varchar(25) NOT NULL default '', emp_id varchar(30) NOT NULL default '', rate_code varchar(10) default NULL, UNIQUE KEY site_emp (siteid,emp_id), KEY siteid (siteid) ) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('rivercats','psmith','cust'), ('rivercats','KWalker','cust');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 ( siteid varchar(25) NOT NULL default '', rate_code varchar(10) NOT NULL default '', base_rate float NOT NULL default '0', PRIMARY KEY  (siteid,rate_code), FULLTEXT KEY rate_code (rate_code) ) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES ('rivercats','cust',20);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT emp.rate_code, lr.base_rate FROM t1 AS emp LEFT JOIN t2 AS lr USING (siteid, rate_code) WHERE emp.emp_id = 'psmith' AND lr.siteid = 'rivercats';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "rate_code"
      },
      {
        "table": "t2",
        "column": "base_rate"
      },
      {
        "table": "t1",
        "column": "emp_id"
      },
      {
        "table": "t2",
        "column": "siteid"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "emp_id"
          },
          {
            "table": "t2",
            "column": "siteid"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT emp.rate_code, lr.base_rate FROM t1 AS emp LEFT JOIN t2 AS lr USING (siteid, rate_code) WHERE lr.siteid = 'rivercats' AND emp.emp_id = 'psmith';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "rate_code"
      },
      {
        "table": "t2",
        "column": "base_rate"
      },
      {
        "table": "t2",
        "column": "siteid"
      },
      {
        "table": "t1",
        "column": "emp_id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "siteid"
          },
          {
            "table": "t1",
            "column": "emp_id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT rate_code, lr.base_rate FROM t1 AS emp LEFT JOIN t2 AS lr USING (siteid, rate_code) WHERE emp.emp_id = 'psmith' AND siteid = 'rivercats';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "rate_code"
      },
      {
        "table": "t2",
        "column": "base_rate"
      },
      {
        "table": "t1",
        "column": "emp_id"
      },
      {
        "column": "siteid"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "emp_id"
          },
          {
            "column": "siteid"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT rate_code, lr.base_rate FROM t1 AS emp LEFT JOIN t2 AS lr USING (siteid, rate_code) WHERE siteid = 'rivercats' AND emp.emp_id = 'psmith';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "rate_code"
      },
      {
        "table": "t2",
        "column": "base_rate"
      },
      {
        "column": "siteid"
      },
      {
        "table": "t1",
        "column": "emp_id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "siteid"
          },
          {
            "table": "t1",
            "column": "emp_id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (ID INTEGER NOT NULL PRIMARY KEY, Value1 VARCHAR(255));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (ID INTEGER NOT NULL PRIMARY KEY, Value2 VARCHAR(255));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1, 'A');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (1, 'B');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1 NATURAL JOIN t2 WHERE 1 AND (Value1 = 'A' AND Value2 <> 'B');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "column": "Value1"
      },
      {
        "column": "Value2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "Value1"
          }
        ]
      },
      {
        "name": "<>",
        "fields": [
          {
            "column": "Value2"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 NATURAL JOIN t2 WHERE 1 AND Value1 = 'A' AND Value2 <> 'B';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "column": "Value1"
      },
      {
        "column": "Value2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "Value1"
          }
        ]
      },
      {
        "name": "<>",
        "fields": [
          {
            "column": "Value2"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 NATURAL JOIN t2 WHERE (Value1 = 'A' AND Value2 <> 'B') AND 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "column": "Value1"
      },
      {
        "column": "Value2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "Value1"
          }
        ]
      },
      {
        "name": "<>",
        "fields": [
          {
            "column": "Value2"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (b int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t3 (c int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1 NATURAL JOIN t2 NATURAL JOIN t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1, t2, t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (i int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (i int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t3 (i int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values(1),(2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values(2),(3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t3 values (2),(4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1 natural left join t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 left join t2 on (t1.i=t2.i);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "i"
      },
      {
        "table": "t2",
        "column": "i"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "i"
          },
          {
            "table": "t2",
            "column": "i"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural left join t2 natural left join t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 left join t2 on (t1.i=t2.i) left join t3 on (t2.i=t3.i);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "i"
      },
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t3",
        "column": "i"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "i"
          },
          {
            "table": "t2",
            "column": "i"
          },
          {
            "table": "t3",
            "column": "i"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t3 natural right join t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t3 right join t2 on (t3.i=t2.i);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t3",
        "column": "i"
      },
      {
        "table": "t2",
        "column": "i"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t3",
            "column": "i"
          },
          {
            "table": "t2",
            "column": "i"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t3 natural right join t2 natural right join t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t3 right join t2 on (t3.i=t2.i) right join t1 on (t2.i=t1.i);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t3",
        "column": "i"
      },
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t1",
        "column": "i"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t3",
            "column": "i"
          },
          {
            "table": "t2",
            "column": "i"
          },
          {
            "table": "t1",
            "column": "i"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1,t2 natural left join t3 order by t1.i,t2.i,t3.i;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t1",
        "column": "i"
      },
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t3",
        "column": "i"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1,t2 left join t3 on (t2.i=t3.i) order by t1.i,t2.i,t3.i;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t3",
        "column": "i"
      },
      {
        "column": "*"
      },
      {
        "table": "t1",
        "column": "i"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "i"
          },
          {
            "table": "t3",
            "column": "i"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select t1.i,t2.i,t3.i from t2 natural left join t3,t1 order by t1.i,t2.i,t3.i;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "i"
      },
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t3",
        "column": "i"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select t1.i,t2.i,t3.i from t2 left join t3 on (t2.i=t3.i),t1 order by t1.i,t2.i,t3.i;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t3",
        "column": "i"
      },
      {
        "table": "t1",
        "column": "i"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "i"
          },
          {
            "table": "t3",
            "column": "i"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1,t2 natural right join t3 order by t1.i,t2.i,t3.i;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t1",
        "column": "i"
      },
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t3",
        "column": "i"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1,t2 right join t3 on (t2.i=t3.i) order by t1.i,t2.i,t3.i;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t3",
        "column": "i"
      },
      {
        "column": "*"
      },
      {
        "table": "t1",
        "column": "i"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "i"
          },
          {
            "table": "t3",
            "column": "i"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select t1.i,t2.i,t3.i from t2 natural right join t3,t1 order by t1.i,t2.i,t3.i;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "i"
      },
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t3",
        "column": "i"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select t1.i,t2.i,t3.i from t2 right join t3 on (t2.i=t3.i),t1 order by t1.i,t2.i,t3.i;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t3",
        "column": "i"
      },
      {
        "table": "t1",
        "column": "i"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "i"
          },
          {
            "table": "t3",
            "column": "i"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2,t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a int, b int default 0, c int default 1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 (a) VALUES (1),(2),(3),(4),(5),(6),(7),(8);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 (a) SELECT a + 8 FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 (a) SELECT a + 16 FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (a int, d int, e int default 0);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 (a, d) VALUES (1,1),(2,2),(3,3),(4,4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "d"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 (a, d) SELECT a+4, a+4 FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "d"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 (a, d) SELECT a+8, a+8 FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "d"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXPLAIN SELECT STRAIGHT_JOIN t2.e FROM t1,t2 WHERE t2.d=1 AND t1.b=t2.e ORDER BY t1.b, t1.c;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT STRAIGHT_JOIN t2.e FROM t1,t2 WHERE t2.d=1 AND t1.b=t2.e ORDER BY t1.b, t1.c;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "e"
      },
      {
        "table": "t2",
        "column": "d"
      },
      {
        "table": "t1",
        "column": "b"
      },
      {
        "table": "t1",
        "column": "c"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "d"
          },
          {
            "table": "t1",
            "column": "b"
          },
          {
            "table": "t2",
            "column": "e"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (c int, b int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (a int, b int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t3 (b int, c int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t4 (y int, c int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t5 (y int, z int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t6 (a int, c int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t6"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (10,1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (3 ,1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (3 ,2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values (2, 1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t3 values (1, 3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t3 values (1,10);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t4 values (11,3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t4 values (2, 3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t5 values (11,4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t6 values (2, 3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t6"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create algorithm=merge view v1a as select * from t1 natural join t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1a"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create algorithm=merge view v1b(a,b,c) as select * from t1 natural join t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1b"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create algorithm=merge view v1c as select b as a, c as b, a as c from t1 natural join t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "c"
      },
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1c"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create algorithm=merge view v1d(b, a, c) as select a as c, c as b, b as a from t1 natural join t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "c"
      },
      {
        "column": "b"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1d"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create algorithm=merge view v3a as select * from t1 natural join t2 natural join t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v3a"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create algorithm=merge view v3b as select * from t1 natural join (t2 natural join t3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v3b"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create algorithm=merge view v4 as select * from v2a natural join v3a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v4"
      },
      {
        "table": "v2a"
      },
      {
        "table": "v3a"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from (t1 natural join t2) natural join (t3 natural join t4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 natural join t2) natural left join (t3 natural join t4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t3 natural join t4) natural right join (t1 natural join t2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 natural left join t2) natural left join (t3 natural left join t4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t4 natural right join t3) natural right join (t2 natural right join t1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t4"
      },
      {
        "table": "t3"
      },
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural join t2 natural join t3 natural join t4;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from ((t1 natural join t2) natural join t3) natural join t4;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural join (t2 natural join (t3 natural join t4));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t5 natural right join (t4 natural right join ((t2 natural right join t1) natural right join t3));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t5"
      },
      {
        "table": "t4"
      },
      {
        "table": "t2"
      },
      {
        "table": "t1"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 natural join t2), (t3 natural join t4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t5 natural join ((t1 natural join t2), (t3 natural join t4));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t5"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from  ((t1 natural join t2),  (t3 natural join t4)) natural join t5;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t5 natural join ((t1 natural join t2) cross join (t3 natural join t4));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t5"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from  ((t1 natural join t2) cross join (t3 natural join t4)) natural join t5;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 join t2 using (b)) join (t3 join t4 using (c)) using (c);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 join t2 using (b)) natural join (t3 join t4 using (c));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select a,b,c from (t1 natural join t2) natural join (t3 natural join t4) where b + 1 = y or b + 10 = y group by b,c,a having min(b) < max(y) order by a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "b"
      },
      {
        "column": "c"
      },
      {
        "column": "y"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "y"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 natural join t2) natural left join (t3 natural join t4) where b + 1 = y or b + 10 = y group by b,c,a,y having min(b) < max(y) order by a, y;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "column": "b"
      },
      {
        "column": "y"
      },
      {
        "column": "c"
      },
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "y"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t3 natural join t4) natural right join (t1 natural join t2) where b + 1 = y or b + 10 = y group by b,c,a,y having min(b) < max(y) order by a, y;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "column": "b"
      },
      {
        "column": "y"
      },
      {
        "column": "c"
      },
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "y"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural join t2 where t1.c > t2.a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t1",
        "column": "c"
      },
      {
        "table": "t2",
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": ">",
        "fields": [
          {
            "table": "t1",
            "column": "c"
          },
          {
            "table": "t2",
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural join t2 where t1.b > t2.b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t1",
        "column": "b"
      },
      {
        "table": "t2",
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": ">",
        "fields": [
          {
            "table": "t1",
            "column": "b"
          },
          {
            "table": "t2",
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural left join (t4 natural join t5) where t5.z is not NULL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t5",
        "column": "z"
      }
    ],
    "function_info": [
      {
        "name": "isnotnull",
        "fields": [
          {
            "table": "t5",
            "column": "z"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 join (t2 join t4 on b + 1 = y) on t1.c = t4.c;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "y",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t1",
        "column": "c"
      },
      {
        "table": "t4",
        "column": "c"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "y"
          },
          {
            "table": "t1",
            "column": "c"
          },
          {
            "table": "t4",
            "column": "c"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t2 join t4 on b + 1 = y) join t1 on t1.c = t4.c;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "y"
      },
      {
        "table": "t1",
        "column": "c"
      },
      {
        "table": "t4",
        "column": "c"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "y"
          },
          {
            "table": "t1",
            "column": "c"
          },
          {
            "table": "t4",
            "column": "c"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t4"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural join (t2 join t4 on b + 1 = y);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "y",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "y"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 cross join t2) join (t3 cross join t4) on (a < y and t2.b < t3.c);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "y"
      },
      {
        "table": "t2",
        "column": "b"
      },
      {
        "table": "t3",
        "column": "c"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "<",
        "fields": [
          {
            "column": "a"
          },
          {
            "column": "y"
          },
          {
            "table": "t2",
            "column": "b"
          },
          {
            "table": "t3",
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1, t2) join (t3, t4) on (a < y and t2.b < t3.c);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "y"
      },
      {
        "table": "t2",
        "column": "b"
      },
      {
        "table": "t3",
        "column": "c"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "<",
        "fields": [
          {
            "column": "a"
          },
          {
            "column": "y"
          },
          {
            "table": "t2",
            "column": "b"
          },
          {
            "table": "t3",
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 natural join t2) join (t3 natural join t4) on a = y;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "y"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          },
          {
            "column": "y"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from ((t3 join (t1 join t2 on c > a) on t3.b < t2.a) join t4 on y > t1.c) join t5 on z = t1.b + 3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "c",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t3",
        "column": "b"
      },
      {
        "table": "t2",
        "column": "a"
      },
      {
        "column": "y"
      },
      {
        "table": "t1",
        "column": "c"
      },
      {
        "column": "z"
      },
      {
        "table": "t1",
        "column": "b"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": ">",
        "fields": [
          {
            "column": "c"
          },
          {
            "column": "a"
          },
          {
            "column": "y"
          },
          {
            "table": "t1",
            "column": "c"
          }
        ]
      },
      {
        "name": "<",
        "fields": [
          {
            "table": "t3",
            "column": "b"
          },
          {
            "table": "t2",
            "column": "a"
          }
        ]
      },
      {
        "name": "=",
        "fields": [
          {
            "column": "z"
          }
        ]
      },
      {
        "name": "+",
        "fields": [
          {
            "table": "t1",
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural join t2 where t1.b > 0;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t1",
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": ">",
        "fields": [
          {
            "table": "t1",
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural join (t4 natural join t5) where t4.y > 7;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t4",
        "column": "y"
      }
    ],
    "function_info": [
      {
        "name": ">",
        "fields": [
          {
            "table": "t4",
            "column": "y"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t4 natural join t5) natural join t1 where t4.y > 7;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t4",
        "column": "y"
      }
    ],
    "function_info": [
      {
        "name": ">",
        "fields": [
          {
            "table": "t4",
            "column": "y"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t4"
      },
      {
        "table": "t5"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural left join (t4 natural join t5) where t4.y > 7;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t4",
        "column": "y"
      }
    ],
    "function_info": [
      {
        "name": ">",
        "fields": [
          {
            "table": "t4",
            "column": "y"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t4 natural join t5) natural right join t1 where t4.y > 7;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t4",
        "column": "y"
      }
    ],
    "function_info": [
      {
        "name": ">",
        "fields": [
          {
            "table": "t4",
            "column": "y"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t4"
      },
      {
        "table": "t5"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 natural join t2) join (t3 natural join t4) on t1.b = t3.b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "b"
      },
      {
        "table": "t3",
        "column": "b"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "b"
          },
          {
            "table": "t3",
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select t1.*, t2.* from t1 natural join t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "*"
      },
      {
        "table": "t2",
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select t1.*, t2.*, t3.*, t4.* from (t1 natural join t2) natural join (t3 natural join t4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "*"
      },
      {
        "table": "t2",
        "column": "*"
      },
      {
        "table": "t3",
        "column": "*"
      },
      {
        "table": "t4",
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (select * from t1 natural join t2) as t12 natural join (select * from t3 natural join t4) as t34;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (select * from t1 natural join t2) as t12 natural left join (select * from t3 natural join t4) as t34;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (select * from t3 natural join t4) as t34 natural right join (select * from t1 natural join t2) as t12;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v1a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1a"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v1b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1b"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v1c;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1c"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v1d;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1d"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v2a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v2a"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v2b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v2b"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v3a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v3a"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v3b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v3b"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v4;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v1a natural join v2a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1a"
      },
      {
        "table": "v2a"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select v2a.* from v1a natural join v2a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "v2a",
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1a"
      },
      {
        "table": "v2a"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v1b join v2a on v1b.b = v2a.c;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "v1b",
        "column": "b"
      },
      {
        "table": "v2a",
        "column": "c"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "v1b",
            "column": "b"
          },
          {
            "table": "v2a",
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1b"
      },
      {
        "table": "v2a"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v1c join v2a on v1c.b = v2a.c;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "v1c",
        "column": "b"
      },
      {
        "table": "v2a",
        "column": "c"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "v1c",
            "column": "b"
          },
          {
            "table": "v2a",
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1c"
      },
      {
        "table": "v2a"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v1d join v2a on v1d.a = v2a.c;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "v1d",
        "column": "a"
      },
      {
        "table": "v2a",
        "column": "c"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "v1d",
            "column": "a"
          },
          {
            "table": "v2a",
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1d"
      },
      {
        "table": "v2a"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v1a join (t3 natural join t4) on a = y;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "y"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          },
          {
            "column": "y"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1a"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 natural join (t3 cross join t4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t3 cross join t4) natural join t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t1 join (t2, t3) using (b);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from ((t1 natural join t2), (t3 natural join t4)) natural join t6;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t6"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from ((t1 natural join t2), (t3 natural join t4)) natural join t6;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t6"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t6 natural join ((t1 natural join t2),  (t3 natural join t4));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t6"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 join t2 on t1.b=t2.b) natural join (t3 natural join t4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "b"
      },
      {
        "table": "t2",
        "column": "b"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "b"
          },
          {
            "table": "t2",
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from  (t3 natural join t4) natural join (t1 join t2 on t1.b=t2.b);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t2",
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "b"
          },
          {
            "table": "t2",
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t3 join (t4 natural join t5) on (b < z)) natural join (t1 natural join t2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "z"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "<",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "z"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from (t1 natural join t2) natural join (t3 join (t4 natural join t5) on (b < z));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "z",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "<",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "z"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select t1.b from v1a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "b"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1a"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from v1a join v1b on t1.b = t2.b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "b"
      },
      {
        "table": "t2",
        "column": "b"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "b"
          },
          {
            "table": "t2",
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1a"
      },
      {
        "table": "v1b"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t4;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t5;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop table t6;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t6"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v1a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1a"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v1b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1b"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v1c;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1c"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v1d;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1d"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v2a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v2a"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v2b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v2b"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v3a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v3a"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v3b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v3b"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v4;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a1 int, a2 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (a1 int, b int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t3 (c1 int, c2 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t4 (c2 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (1,1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values (1,1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t3 values (1,1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t4 values (1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1 join t2 using (a1) join t3 on b=c1 join t4 using (c2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "c1"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "c1"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select * from t3 join (t1 join t2 using (a1)) on b=c1 join t4 using (c2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "c1"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "c1"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select a2 from t1 join t2 using (a1) join t3 on b=c1 join t4 using (c2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "c1"
      },
      {
        "column": "a2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "c1"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select a2 from t3 join (t1 join t2 using (a1)) on b=c1 join t4 using (c2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "c1"
      },
      {
        "column": "a2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "c1"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select a2 from ((t1 join t2 using (a1)) join t3 on b=c1) join t4 using (c2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "c1"
      },
      {
        "column": "a2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "c1"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select a2 from ((t1 natural join t2) join t3 on b=c1) natural join t4;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "c1"
      },
      {
        "column": "a2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "c1"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2,t3,t4;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (c int, b int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (a int, b int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t3 (b int, c int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t4 (y int, c int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t5 (y int, z int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (3,2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values (1,2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t3 values (2,3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t4 values (1,3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t5 values (1,4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "prepare stmt1 from \"select * from ((t3 natural join (t1 natural join t2)) natural join t4) natural join t5\";",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "preparable_stmt": {
      "field_info": [
        {
          "column": "*"
        }
      ],
      "operation": "sql::OP_SELECT",
      "table_names": [
        {
          "table": "t3"
        },
        {
          "table": "t1"
        },
        {
          "table": "t2"
        },
        {
          "table": "t4"
        },
        {
          "table": "t5"
        }
      ],
      "type_mask": "sql::TYPE_READ"
    },
    "prepare_name": "stmt1",
    "type_mask": "sql::TYPE_PREPARE_NAMED_STMT"
  }
}

{
  "statement": "execute stmt1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXECUTE",
    "prepare_name": "stmt1",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from ((t3 natural join (t1 natural join t2)) natural join t4) natural join t5;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1, t2, t3, t4, t5;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (ID INTEGER, Name VARCHAR(50));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (Test_ID INTEGER);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE VIEW v1 (Test_ID, Description) AS SELECT ID, Name FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "ID"
      },
      {
        "column": "Name"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE tv1 SELECT Description AS Name FROM v1 JOIN t2 USING (Test_ID);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "Description"
      }
    ],
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "tv1"
      },
      {
        "table": "v1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DESCRIBE tv1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "table_names": [
      {
        "table": "tv1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "CREATE TABLE tv2 SELECT Description AS Name FROM v1 JOIN t2 ON v1.Test_ID = t2.Test_ID;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "v1",
        "column": "Test_ID"
      },
      {
        "table": "t2",
        "column": "Test_ID"
      },
      {
        "column": "Description"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "v1",
            "column": "Test_ID"
          },
          {
            "table": "t2",
            "column": "Test_ID"
          }
        ]
      }
    ],
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "tv2"
      },
      {
        "table": "v1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DESCRIBE tv2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "table_names": [
      {
        "table": "tv2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP VIEW v1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1,t2,tv1,tv2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "tv1"
      },
      {
        "table": "tv2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a int, b int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (NULL, 1), (NULL, 2), (NULL, 3), (NULL, 4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (a int not null, primary key(a));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t3 (a int not null, primary key(a));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t3 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "flush status;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t1, t2, t3 where t3.a=t1.a and t2.a=t1.b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t3",
        "column": "a"
      },
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "a"
      },
      {
        "table": "t1",
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t3",
            "column": "a"
          },
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "a"
          },
          {
            "table": "t1",
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "explain select * from t1, t2, t3 where t3.a=t1.a and t2.a=t1.b;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "show status like 'Handler_read%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1, t2, t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (a int, b int, filler char(100), key(a), key(b));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t3 (a int, b int, filler char(100), key(a), key(b));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t3 select * from t2 where a < 800;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "<",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "explain select * from t2,t3 where t2.a < 200 and t2.b=t3.b;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1, t2, t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (a int, b int, primary key(a));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "explain select * from t1;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "show status like '%cost%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select 'The cost of accessing t1 (dont care if it changes' '^';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select 'vv: Following query must use ALL(t1), eq_ref(A), eq_ref(B): vv' Z;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "explain select * from t1, t2 A, t2 B where A.a = t1.a and B.a=A.b;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "show status like '%cost%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "select '^^: The above should be ~= 20 + cost(select * from t1). Value less than 20 is an error' Z;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT PRIMARY KEY, b INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (c INT PRIMARY KEY, d INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES(1,NULL),(2,NULL),(3,NULL),(4,NULL);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 SELECT a + 4, b FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 SELECT a + 8, b FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 SELECT a + 16, b FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 SELECT a + 32, b FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 SELECT a + 64, b FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "+",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 SELECT a, b FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t1 JOIN t2 ON b=c ORDER BY a LIMIT 2;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t1 JOIN t2 ON a=c ORDER BY a LIMIT 2;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 JOIN t2 ON b=c ORDER BY a LIMIT 2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "c"
      },
      {
        "column": "*"
      },
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 JOIN t2 ON a=c ORDER BY a LIMIT 2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "c"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          },
          {
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t1 JOIN t2 ON b=c ORDER BY a;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t1 JOIN t2 ON a=c ORDER BY a;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 JOIN t2 ON b=c ORDER BY a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "b"
      },
      {
        "column": "c"
      },
      {
        "column": "*"
      },
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "b"
          },
          {
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 JOIN t2 ON a=c ORDER BY a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      },
      {
        "column": "c"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "a"
          },
          {
            "column": "c"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE IF EXISTS t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t3 (a INT, INDEX (a));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t4 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t5 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t6 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t6"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1), (1), (1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (2), (2), (2), (2), (2), (2), (2), (2), (2), (2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t3 VALUES (3), (3), (3), (3), (3), (3), (3), (3), (3), (3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t1 JOIN t2 ON t1.a = t2.a LEFT JOIN ( ( t3 LEFT JOIN t4 ON t3.a = t4.a ) LEFT JOIN ( t5 LEFT JOIN t6 ON t5.a = t6.a ) ON t4.a = t5.a ) ON t1.a = t3.a;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 JOIN t2 ON t1.a = t2.a LEFT JOIN ( ( t3 LEFT JOIN t4 ON t3.a = t4.a ) LEFT JOIN ( t5 LEFT JOIN t6 ON t5.a = t6.a ) ON t4.a = t5.a ) ON t1.a = t3.a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "a"
      },
      {
        "table": "t3",
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t4",
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t5",
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t6",
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "a"
          },
          {
            "table": "t3",
            "column": "a"
          },
          {
            "table": "t4",
            "column": "a"
          },
          {
            "table": "t5",
            "column": "a"
          },
          {
            "table": "t6",
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      },
      {
        "table": "t6"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1,t2,t3,t4,t5,t6;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      },
      {
        "table": "t6"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1(f1 INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1),(2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE VIEW v1 AS SELECT 1 FROM t1 LEFT JOIN t1 AS t2 on 1=1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "function_info": [
      {
        "name": "=",
        "fields": []
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXPLAIN EXTENDED SELECT 1 FROM v1 right join v1 AS v2 ON RAND();",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP VIEW v1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a TINYINT, b TEXT, KEY (a));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (0,''),(0,'');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "FLUSH TABLES;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXPLAIN SELECT 1 FROM t1 LEFT JOIN t1 a ON 1 WHERE ROW(t1.a, 1111.11) = ROW(1111.11, 1111.11) AND ROW(t1.b, 1111.11) <=> ROW('','');",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT NOT NULL, b INT NOT NULL, PRIMARY KEY (a,b));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (0,0), (1,1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1 STRAIGHT_JOIN t1 t2 ON t1.a=t2.a AND t1.a=t2.b ORDER BY t2.a, t1.a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t1",
        "column": "b"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t1",
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (f1 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (f1 int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DEALLOCATE PREPARE stmt;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "prepare_name": "stmt",
    "type_mask": "sql::TYPE_DEALLOC_PREPARE"
  }
}

{
  "statement": "DROP VIEW v1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1(a CHAR(9),b INT,KEY(b),KEY(a)) ENGINE=MYISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2(a CHAR(9),b INT,KEY(b),KEY(a)) ENGINE=MYISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('1',null),(null,null);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES ('1',null),(null,null);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE mm1(a CHAR(9),b INT,KEY(b),KEY(a)) ENGINE=MERGE  UNION=(t1,t2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "mm1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT t1.a FROM mm1,t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "mm1"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1, t2, mm1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "mm1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1(a INT, b INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (), ();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT 1 FROM t1 GROUP BY GREATEST(t1.a, (SELECT 1 FROM (SELECT t1.b FROM t1,t1 t2 ORDER BY t1.a, t1.a LIMIT 1) AS d) );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t1",
        "column": "b",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      }
    ],
    "function_info": [
      {
        "name": "GREATEST",
        "fields": [
          {
            "table": "t1",
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1(c INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1), (2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "PREPARE stmt FROM \"SELECT t2.c AS f1 FROM t1 LEFT JOIN t1 t2 ON t1.c=t2.c RIGHT JOIN t1 t3 ON t1.c=t3.c GROUP BY f1;\";",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "preparable_stmt": {
      "field_info": [
        {
          "table": "t1",
          "column": "c"
        }
      ],
      "function_info": [
        {
          "name": "=",
          "fields": [
            {
              "table": "t1",
              "column": "c"
            }
          ]
        }
      ],
      "operation": "sql::OP_SELECT",
      "table_names": [
        {
          "table": "t1"
        }
      ],
      "type_mask": "sql::TYPE_READ"
    },
    "prepare_name": "stmt",
    "type_mask": "sql::TYPE_PREPARE_NAMED_STMT"
  }
}

{
  "statement": "EXECUTE stmt;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXECUTE",
    "prepare_name": "stmt",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXECUTE stmt;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXECUTE",
    "prepare_name": "stmt",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DEALLOCATE PREPARE stmt;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "prepare_name": "stmt",
    "type_mask": "sql::TYPE_DEALLOC_PREPARE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 ( f1 int NOT NULL , f2 int NOT NULL ) ;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (214,0),(6,6);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 ( f2 int) ;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (88),(88);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE ALGORITHM=MERGE VIEW v1 AS SELECT t1.f1, t2.f2 FROM (t2 LEFT JOIN t1 ON (t2.f2 <> t1.f1)) WHERE (t1.f2 <= 0) ;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "f2"
      },
      {
        "table": "t1",
        "column": "f1"
      },
      {
        "table": "t1",
        "column": "f2"
      }
    ],
    "function_info": [
      {
        "name": "<>",
        "fields": [
          {
            "table": "t2",
            "column": "f2"
          },
          {
            "table": "t1",
            "column": "f1"
          }
        ]
      },
      {
        "name": "<=",
        "fields": [
          {
            "table": "t1",
            "column": "f2"
          }
        ]
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE ALGORITHM=MERGE VIEW v2 AS SELECT t1.f1, t2.f2 FROM (t2 LEFT JOIN t1 ON (t2.f2 <> t1.f1)) WHERE (t1.f2 <= 0 or t1.f2 is null) ;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "f2"
      },
      {
        "table": "t1",
        "column": "f1"
      },
      {
        "table": "t1",
        "column": "f2"
      }
    ],
    "function_info": [
      {
        "name": "<>",
        "fields": [
          {
            "table": "t2",
            "column": "f2"
          },
          {
            "table": "t1",
            "column": "f1"
          }
        ]
      },
      {
        "name": "<=",
        "fields": [
          {
            "table": "t1",
            "column": "f2"
          }
        ]
      },
      {
        "name": "isnull",
        "fields": [
          {
            "table": "t1",
            "column": "f2"
          }
        ]
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v2"
      },
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f1 , MIN(f2) FROM v1 GROUP BY f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "f1"
      },
      {
        "column": "f2"
      }
    ],
    "function_info": [
      {
        "name": "MIN",
        "fields": [
          {
            "column": "f2"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT f1 , MIN(f2) FROM v2 GROUP BY f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "f1"
      },
      {
        "column": "f2"
      }
    ],
    "function_info": [
      {
        "name": "MIN",
        "fields": [
          {
            "column": "f2"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "v2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "drop view v1,v2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      },
      {
        "table": "v2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (pk INT, v VARCHAR(2), PRIMARY KEY(pk));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE INDEX ix1 ON t1(v);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (pk INT, v VARCHAR(2), PRIMARY KEY(pk));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE INDEX ix2 ON t2(v);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1,'a'),(2,NULL);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (1,NULL);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t1 JOIN t2 ON t1.v = t2.v ORDER BY 1;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t1 JOIN t2 ON t1.v = t2.v;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (3,'b'),(4,NULL),(5,'c'),(6,'cc'),(7,'d'), (8,'dd'),(9,'e'),(10,'ee');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (2,NULL);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "FLUSH STATUS;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1 JOIN t2 ON t1.v = t2.v WHERE t2.v IS NULL ORDER BY 1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "v"
      },
      {
        "table": "t2",
        "column": "v"
      },
      {
        "column": "*"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t1",
            "column": "v"
          },
          {
            "table": "t2",
            "column": "v"
          }
        ]
      },
      {
        "name": "isnull",
        "fields": [
          {
            "table": "t2",
            "column": "v"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SHOW STATUS LIKE 'Handler_read_%';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1, t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1(c1 int primary key, c2 char(10)) engine=myisam;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2(c1 int primary key, c2 char(10), ref_t1 int) engine=myisam;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t3(c1 int primary key, c2 char(10), ref_t1 int) engine=myisam;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t4(c1 int primary key, c2 char(10), ref_t1 int) engine=myisam;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values(1,'a');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values(1,'a', 1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t3 values(1,'a', 1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t3 values(2,'b',2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t4 values(1,'a', 1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t4 values(2,'a', 2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t4 values(3,'a', 3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t4 values(4,'a', 4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values(2,'b');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values(3,'c');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t4 JOIN (t1 JOIN t3 ON t3.ref_t1=t1.c1 JOIN t2 ON t2.ref_t1=t1.c1) ON t4.ref_t1=t1.c1;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "EXPLAIN SELECT STRAIGHT_JOIN * FROM t4 JOIN (t1 JOIN t3 ON t3.ref_t1=t1.c1 JOIN t2 ON t2.ref_t1=t1.c1) ON t4.ref_t1=t1.c1;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t4 STRAIGHT_JOIN (t1 JOIN t3 ON t3.ref_t1=t1.c1 JOIN t2 ON t2.ref_t1=t1.c1) ON t4.ref_t1=t1.c1;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2,t3,t4;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (a int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values (1),(2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 select * from t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (a int, b int, key(a,b));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values (1,1),(1,2),(1,3),(1,4),(2,5),(2,6),(2,7),(2,8),(2,9);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 select * from t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 select * from t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 select * from t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t3 (a int, b int, key(a));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t3 values (1,1),(2,2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select * from t3 straight_join t1 straight_join t2 force index(a) where t2.a=1 and t2.b=t1.a and t1.a=t3.b and t3.a=1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t2",
        "column": "a"
      },
      {
        "table": "t2",
        "column": "b"
      },
      {
        "table": "t1",
        "column": "a"
      },
      {
        "table": "t3",
        "column": "b"
      },
      {
        "table": "t3",
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "a"
          },
          {
            "table": "t2",
            "column": "b"
          },
          {
            "table": "t1",
            "column": "a"
          },
          {
            "table": "t3",
            "column": "b"
          },
          {
            "table": "t3",
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2,t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (f1 int, f2 int) ;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (4,0),(5,1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (f1 int, f2 int, KEY (f2)) ;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (5,7), (8,9);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t1 STRAIGHT_JOIN t2 ON t2.f1 = t1.f1 WHERE t1.f1<>0 OR t1.f2<>0 AND t1.f1 = t2.f2;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t1 STRAIGHT_JOIN t2 ON t2.f1 = t1.f1 WHERE t1.f1<>0 OR t1.f2<>0 AND t1.f1 = t2.f2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "f1"
      },
      {
        "table": "t1",
        "column": "f1"
      },
      {
        "column": "*"
      },
      {
        "table": "t1",
        "column": "f2"
      },
      {
        "table": "t2",
        "column": "f2"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "f1"
          },
          {
            "table": "t1",
            "column": "f1"
          },
          {
            "table": "t2",
            "column": "f2"
          }
        ]
      },
      {
        "name": "<>",
        "fields": [
          {
            "table": "t1",
            "column": "f1"
          },
          {
            "table": "t1",
            "column": "f2"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1(f1 int PRIMARY KEY, f2 int) ;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (9,4), (10,9);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2(f1 int PRIMARY KEY, f2 int) ;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (9,4), (10,9);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXPLAIN SELECT STRAIGHT_JOIN * FROM t1 JOIN t2 ON t2.f2 = t1.f1 WHERE t1.f1 IN (SELECT f1 FROM t1) AND t1.f1 = t2.f1 OR t1.f1 = 9;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT STRAIGHT_JOIN * FROM t1 JOIN t2 ON t2.f2 = t1.f1 WHERE t1.f1 IN (SELECT f1 FROM t1) AND t1.f1 = t2.f1 OR t1.f1 = 9;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "f2"
      },
      {
        "table": "t1",
        "column": "f1"
      },
      {
        "column": "*"
      },
      {
        "column": "f1",
        "context": [
          "Parser::FieldContext::FIELD_SUBQUERY"
        ]
      },
      {
        "table": "t2",
        "column": "f1"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "f2"
          },
          {
            "table": "t1",
            "column": "f1"
          },
          {
            "table": "t2",
            "column": "f1"
          }
        ]
      },
      {
        "name": "IN",
        "fields": [
          {
            "table": "t1",
            "column": "f1"
          },
          {
            "column": "f1"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t1 (i time key);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t1 values ('1:1:1'), ('2:2:2');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "create table t2 (i time);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "insert into t2 values ('1:1:1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "select t2.i from t1 left join t2 on t2.i = t1.i where t1.i = '1:1:1';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t2",
        "column": "i"
      },
      {
        "table": "t1",
        "column": "i"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "i"
          },
          {
            "table": "t1",
            "column": "i"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "drop table t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (dog_id int(10), birthday date, PRIMARY KEY (dog_id,birthday));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (5918,'2004-07-22');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (dog_id int(10) unsigned, t_id char(1), birthday date, a_id int(10), PRIMARY KEY (dog_id,t_id,birthday,a_id));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (5918,'N','2004-07-22',5216551), (5918,'N','2004-07-22',5223640), (5918,'N','2004-07-22',5389491), (5918,'N','2004-07-22',5749434), (5918,'N','2004-07-22',5992424), (5922,'N','2005-06-30',5076957), (5924,'N','2000-08-11',20264), (5924,'N','2000-08-11',64251), (5924,'N','2000-08-11',74748), (5924,'N','2000-08-11',87590), (5924,'N','2000-08-11',104695), (5924,'N','2000-08-11',133136), (5924,'N','2000-08-11',5027806), (5924,'N','2000-08-11',5076957), (5924,'N','2000-08-11',5166821), (5924,'N','2000-08-11',5181896), (5924,'N','2000-08-11',5217908), (5924,'N','2000-08-11',5220812), (5924,'N','2000-08-11',5226473), (5924,'N','2000-08-11',5339111), (5925,'N','2005-02-10',19227), (5925,'N','2005-02-10',74529), (5925,'N','2005-02-10',74748), (5927,'N','2005-08-18',20264), (5927,'N','2005-08-18',58364), (5929,'N','2005-01-19',58364), (5935,'N','2006-03-10',19227), (5935,'N','2006-03-10',64251), (5935,'N','2006-03-10',5222400), (5935,'N','2006-03-10',5226473), (5936,'N','2004-10-29',5015032), (5937,'N','2002-04-05',11237), (5937,'N','2002-04-05',23911), (5937,'N','2002-04-05',112133), (5937,'N','2002-04-05',169721), (5937,'N','2002-04-05',170650), (5937,'N','2002-04-05',5014494), (5937,'N','2002-04-05',5166009), (5937,'N','2002-04-05',5181871), (5937,'N','2002-04-05',5213380), (5937,'N','2002-04-05',5214875), (5937,'N','2002-04-05',5895062), (5938,'N','2006-03-24',11237), (5938,'N','2006-03-24',19227), (5938,'N','2006-03-24',23911), (5938,'N','2006-03-24',58364), (5938,'N','2006-03-24',64251), (5938,'N','2006-03-24',111716), (5938,'N','2006-03-24',112702), (5938,'N','2006-03-24',133136), (5938,'N','2006-03-24',168718), (5938,'N','2006-03-24',5137136), (5938,'N','2006-03-24',5161519), (5938,'N','2006-03-24',5168120), (5938,'N','2006-03-24',5219034), (6234,'N','2006-06-02',103058), (6234,'N','2006-06-02',5146844), (6235,'N','2006-06-01',12900), (6235,'N','2006-06-01',20264), (6235,'N','2006-06-01',64251), (6235,'N','2006-06-01',75160), (6235,'N','2006-06-01',5014494), (6235,'N','2006-06-01',5181638), (6236,'N','2006-06-06',112595), (6236,'N','2006-06-06',5219601), (6236,'N','2006-06-06',5808374);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t3 (dog_id int(10) unsigned);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t3 VALUES (5918);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t4 (dog_id int(10), t_id char(1), birthday date, KEY (t_id));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t4 VALUES (5918,'N','2004-07-22'), (5919,'N','2004-07-20');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t4"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t5 (dog_id int(10) unsigned, UNIQUE KEY (dog_id));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t5 VALUES (5918);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SET @tmp_optimizer_switch=@@optimizer_switch;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE|sql::TYPE_USERVAR_WRITE"
  }
}

{
  "statement": "SET optimizer_switch='index_condition_pushdown=off';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "EXPLAIN SELECT * FROM t5 DU, t1 D, t4 DT, t2 DSA, t3 DSAR WHERE DU.dog_id=D.dog_id AND D.dog_id=DT.dog_id AND D.birthday=DT.birthday AND DT.t_id=DSA.t_id AND DT.birthday=DSA.birthday AND DSA.dog_id=DSAR.dog_id;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t5 DU, t1 D, t4 DT, t2 DSA, t3 DSAR WHERE DU.dog_id=D.dog_id AND D.dog_id=DT.dog_id AND D.birthday=DT.birthday AND DT.t_id=DSA.t_id AND DT.birthday=DSA.birthday AND DSA.dog_id=DSAR.dog_id;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t5",
        "column": "dog_id"
      },
      {
        "table": "t1",
        "column": "dog_id"
      },
      {
        "table": "t4",
        "column": "dog_id"
      },
      {
        "table": "t1",
        "column": "birthday"
      },
      {
        "table": "t4",
        "column": "birthday"
      },
      {
        "table": "t4",
        "column": "t_id"
      },
      {
        "table": "t2",
        "column": "t_id"
      },
      {
        "table": "t2",
        "column": "birthday"
      },
      {
        "table": "t2",
        "column": "dog_id"
      },
      {
        "table": "t3",
        "column": "dog_id"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t5",
            "column": "dog_id"
          },
          {
            "table": "t1",
            "column": "dog_id"
          },
          {
            "table": "t4",
            "column": "dog_id"
          },
          {
            "table": "t1",
            "column": "birthday"
          },
          {
            "table": "t4",
            "column": "birthday"
          },
          {
            "table": "t4",
            "column": "t_id"
          },
          {
            "table": "t2",
            "column": "t_id"
          },
          {
            "table": "t2",
            "column": "birthday"
          },
          {
            "table": "t2",
            "column": "dog_id"
          },
          {
            "table": "t3",
            "column": "dog_id"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t5"
      },
      {
        "table": "t1"
      },
      {
        "table": "t4"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SET optimizer_switch=@tmp_optimizer_switch;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "DROP TABLE t1,t2,t3,t4,t5;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      },
      {
        "table": "t3"
      },
      {
        "table": "t4"
      },
      {
        "table": "t5"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (i1 int) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (NULL);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (i2 int, a int, b int) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE ALGORITHM=TEMPTABLE VIEW v2 AS SELECT * FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v2"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES (NULL,1,2),(NULL,2,3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1 JOIN v2 ON i1 = i2 WHERE a < b;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "i1"
      },
      {
        "column": "i2"
      },
      {
        "column": "*"
      },
      {
        "column": "a"
      },
      {
        "column": "b"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "column": "i1"
          },
          {
            "column": "i2"
          }
        ]
      },
      {
        "name": "<",
        "fields": [
          {
            "column": "a"
          },
          {
            "column": "b"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "v2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "EXPLAIN EXTENDED SELECT * FROM t1 JOIN v2 ON i1 = i2 WHERE a < b;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP VIEW v2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SET optimizer_switch=@save_optimizer_switch;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 (a) VALUES (1),(2),(3),(4),(5),(6),(7),(8);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (a int);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 (a) VALUES (1),(2),(3),(4);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "a"
      }
    ],
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "EXPLAIN SELECT t1.a FROM t1 NATURAL INNER JOIN t2 ORDER BY t1.a;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT t1.a FROM t1 NATURAL INNER JOIN t2 ORDER BY t1.a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "EXPLAIN SELECT t1.a FROM t1 STRAIGHT_JOIN t2 USING(a) ORDER BY t1.a;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT t1.a FROM t1 STRAIGHT_JOIN t2 USING(a) ORDER BY t1.a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "EXPLAIN SELECT t1.a FROM t1 NATURAL STRAIGHT_JOIN t2 ORDER BY t1.a;",
  "result": "Parser::Result::PARTIALLY_PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_EXPLAIN",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT t1.a FROM t1 NATURAL STRAIGHT_JOIN t2 ORDER BY t1.a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "table": "t1",
        "column": "a"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a varchar(3) NOT NULL) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('foo');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (b varchar(3), c varchar(3), INDEX(b)) ENGINE=MyISAM;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t2 VALUES ('bar', 'bar'),( 'qux', 'qux');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT STRAIGHT_JOIN * FROM t1, t2 AS t2_1, t2 AS t2_2 WHERE t2_2.c = t2_1.c AND t2_2.b = t2_1.b AND ( a IS NULL OR t2_1.c = a );",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "field_info": [
      {
        "column": "*"
      },
      {
        "table": "t2",
        "column": "c"
      },
      {
        "table": "t2",
        "column": "b"
      },
      {
        "column": "a"
      }
    ],
    "function_info": [
      {
        "name": "=",
        "fields": [
          {
            "table": "t2",
            "column": "c"
          },
          {
            "table": "t2",
            "column": "b"
          },
          {
            "column": "a"
          }
        ]
      },
      {
        "name": "isnull",
        "fields": [
          {
            "column": "a"
          }
        ]
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1,t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::DEFAULT",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      },
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

