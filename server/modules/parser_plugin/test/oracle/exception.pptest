{
  "statement": "SET sql_mode=ORACLE;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10),(20);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(lim INT, res OUT VARCHAR) AS a INT; BEGIN SELECT a INTO a FROM t1 LIMIT lim; EXCEPTION WHEN TOO_MANY_ROWS THEN res:='- WHEN NO_DATA_FOUND THEN res:='- END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SET @res='';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE|sql::TYPE_USERVAR_WRITE"
  }
}

{
  "statement": "CALL p1(0, @res);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "SELECT @res;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "CALL p1(2, @res);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "SELECT @res;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT PRIMARY KEY);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(res OUT VARCHAR) AS BEGIN INSERT INTO t1 VALUES (10); INSERT INTO t1 VALUES (10); EXCEPTION WHEN DUP_VAL_ON_INDEX THEN res:='- END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SET @res='';",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE|sql::TYPE_USERVAR_WRITE"
  }
}

{
  "statement": "CALL p1(@res);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "SELECT @res;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "SELECT * FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN RAISE no_data_found; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN RAISE invalid_cursor; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN RAISE dup_val_on_index; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN raise too_many_rows; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS BEGIN RAISE; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10),(20);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(lim INT) AS a INT; BEGIN SELECT a INTO a FROM t1 LIMIT lim; EXCEPTION WHEN TOO_MANY_ROWS THEN RAISE; WHEN NO_DATA_FOUND THEN RAISE; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(0);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10),(20);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(lim INT) AS a INT; BEGIN SELECT a INTO a FROM t1 LIMIT lim; EXCEPTION WHEN OTHERS THEN RAISE; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(0);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10),(20);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS a INT; CURSOR c IS SELECT a FROM t1; BEGIN FETCH c INTO a; EXCEPTION WHEN INVALID_CURSOR THEN RAISE; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10),(20);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS a INT; CURSOR c IS SELECT a FROM t1; BEGIN FETCH c INTO a; EXCEPTION WHEN OTHERS THEN RAISE; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1 RETURN VARCHAR AS a INT:=10; BEGIN SELECT a INTO a FROM t1; RETURN 'OK'; EXCEPTION WHEN OTHERS THEN RETURN 'Exception'; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f1() FROM DUAL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1(c VARCHAR) RETURN VARCHAR AS e EXCEPTION; f EXCEPTION; BEGIN IF c = 'e' THEN RAISE e; END IF; IF c = 'f' THEN RAISE f; END IF; RETURN 'Got no exceptions'; EXCEPTION WHEN e THEN RETURN 'Got exception e'; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f1('');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f1('e');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1(c VARCHAR) RETURN VARCHAR AS e EXCEPTION; f EXCEPTION; BEGIN IF c = 'e' THEN RAISE e; END IF; IF c = 'f' THEN RAISE f; END IF; RETURN 'Got no exceptions'; EXCEPTION WHEN OTHERS THEN RETURN 'Got some exception'; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f1('');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f1('e');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f1('f');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1(c VARCHAR) RETURN VARCHAR AS e EXCEPTION; f EXCEPTION; a VARCHAR(64):=''; BEGIN BEGIN IF c = 'e' THEN RAISE e; END IF; IF c = 'f' THEN RAISE f; END IF; EXCEPTION WHEN e THEN BEGIN a:='Got EXCEPTION1/e; '; RAISE e; END; WHEN f THEN BEGIN a:='Got EXCEPTION1/f; '; RAISE f; END; END; RETURN 'Got no exceptions'; EXCEPTION WHEN OTHERS THEN RETURN a || 'Got EXCEPTION2/OTHERS;'; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f1('');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f1('e');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f1('f');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1(c VARCHAR) RETURN VARCHAR AS e EXCEPTION; f EXCEPTION; a VARCHAR(64):=''; BEGIN BEGIN IF c = 'e' THEN RAISE e; END IF; IF c = 'f' THEN RAISE f; END IF; EXCEPTION WHEN e THEN BEGIN a:='Got EXCEPTION1/e; '; RAISE; END; WHEN f THEN BEGIN a:='Got EXCEPTION1/f; '; RAISE; END; END; RETURN 'Got no exceptions'; EXCEPTION WHEN e THEN RETURN a || 'Got EXCEPTION2/e;'; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f1('');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f1('e');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1(c VARCHAR) RETURN VARCHAR AS e EXCEPTION; f EXCEPTION; a VARCHAR(64):=''; BEGIN BEGIN IF c = 'e' THEN RAISE e; END IF; IF c = 'f' THEN RAISE f; END IF; EXCEPTION WHEN e THEN BEGIN a:='Got EXCEPTION1/e; '; RAISE; END; WHEN f THEN BEGIN a:='Got EXCEPTION1/f; '; RAISE; END; END; RETURN 'Got no exceptions'; EXCEPTION WHEN OTHERS THEN RETURN a || 'Got EXCEPTION2/OTHERS;'; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f1('');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f1('e');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f1('f');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT PRIMARY KEY);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10),(20),(30);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a INT) AS BEGIN INSERT INTO t1 (a) VALUES (a); EXCEPTION WHEN DUP_VAL_ON_INDEX THEN a:= a+1; INSERT INTO t1 VALUES (a); WHEN OTHERS THEN NULL; NULL; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(30);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

