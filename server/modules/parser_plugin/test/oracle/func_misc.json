{
  "statement": "SET sql_mode=ORACLE;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (SQLCODE INT, SQLERRM VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10, 'test');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT SQLCODE, SQLERRM FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "SQLCODE"
      },
      {
        "column": "SQLERRM"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(stmt VARCHAR) AS BEGIN EXECUTE IMMEDIATE stmt; SELECT 'Error1: ' || SQLCODE || ' ' || SQLERRM; EXCEPTION WHEN OTHERS THEN SELECT 'Error2: ' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1('SELECT 1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1('xxx');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1('SELECT 1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS sqlcode INT:= 10; sqlerrm VARCHAR(64) := 'test'; BEGIN SELECT 'Error: ' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS sqlcode INT; sqlerrm VARCHAR(64); BEGIN SQLCODE:= 10; sqlerrm:= 'test'; SELECT 'Error: ' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(sqlcode INT, sqlerrm VARCHAR) AS BEGIN SELECT 'Error: ' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(10, 'test');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN CREATE TABLE t1 AS SELECT SQLCODE, SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SHOW CREATE TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SHOW",
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN EXPLAIN EXTENDED SELECT SQLCode, SQLErrm; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1 RETURN VARCHAR AS a INT; BEGIN SELECT a INTO a FROM t1; RETURN 'No exception ' || SQLCODE || ' ' || SQLERRM; EXCEPTION WHEN NO_DATA_FOUND THEN RETURN 'Exception ' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f1() FROM DUAL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1 RETURN VARCHAR AS a INT; BEGIN SELECT a INTO a FROM t1; RETURN 'No exception ' || SQLCODE || ' ' || SQLERRM; EXCEPTION WHEN OTHERS THEN RETURN 'Exception ' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f1() FROM DUAL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(res OUT VARCHAR) AS a INT; BEGIN SELECT a INTO a FROM t1; res:= 'No exception ' || SQLCODE || ' ' || SQLERRM; EXCEPTION WHEN NO_DATA_FOUND THEN res:= 'Exception ' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(@a);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "SELECT @a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(res OUT VARCHAR) AS a INT; BEGIN SELECT a INTO a FROM t1; res:= 'No exception ' || SQLCODE || ' ' || SQLERRM; EXCEPTION WHEN OTHERS THEN res:= 'Exception ' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(@a);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "SELECT @a;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1 RETURN VARCHAR AS a INT:=10; BEGIN SELECT a INTO a FROM t1; RETURN 'Value=' || a; EXCEPTION WHEN NO_DATA_FOUND THEN RETURN 'Exception|' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE FUNCTION f2 RETURN VARCHAR AS a VARCHAR(128); BEGIN RETURN f1() || '|' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f1() FROM DUAL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f2() FROM DUAL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f2",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1 RETURN VARCHAR AS a INT:=10; BEGIN SELECT a INTO a FROM t1; RETURN 'Value=' || a; EXCEPTION WHEN OTHERS THEN RETURN 'Exception|' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE FUNCTION f2 RETURN VARCHAR AS a VARCHAR(128); BEGIN RETURN f1() || '|' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f1() FROM DUAL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT f2() FROM DUAL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f2",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(res OUT VARCHAR) AS a INT:=10; BEGIN SELECT a INTO a FROM t1; res:='Value=' || a; EXCEPTION WHEN NO_DATA_FOUND THEN res:='Exception|' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE FUNCTION f2 RETURN VARCHAR AS res VARCHAR(128); BEGIN CALL p1(res); RETURN res || '|' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f2() FROM DUAL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f2",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(res OUT VARCHAR) AS a INT:=10; BEGIN SELECT a INTO a FROM t1; res:='Value=' || a; EXCEPTION WHEN OTHERS THEN res:='Exception|' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE FUNCTION f2 RETURN VARCHAR AS res VARCHAR(128); BEGIN CALL p1(res); RETURN res || '|' || SQLCODE || ' ' || SQLERRM; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "SELECT f2() FROM DUAL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f2",
        "fields": []
      }
    ],
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "BEGIN SELECT SQLCODE; END ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

