{
  "statement": "SET sql_mode=ORACLE;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR c IS SELECT 1 AS c FROM DUAL; BEGIN SELECT c%ROWCOUNT; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR c IS SELECT 1 AS c FROM DUAL; BEGIN SELECT c%FOUND; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR c IS SELECT 1 AS c FROM DUAL; BEGIN SELECT c%NOTFOUND; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR c IS SELECT 1 AS c FROM DUAL; BEGIN SELECT c%ROWCOUNT; EXCEPTION WHEN INVALID_CURSOR THEN SELECT 'INVALID_CURSOR caught' AS msg; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR c IS SELECT 1 AS c FROM DUAL; BEGIN SELECT c%FOUND; EXCEPTION WHEN INVALID_CURSOR THEN SELECT 'INVALID_CURSOR caught' AS msg; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR c IS SELECT 1 AS c FROM DUAL; BEGIN SELECT c%NOTFOUND; EXCEPTION WHEN INVALID_CURSOR THEN SELECT 'INVALID_CURSOR caught' AS msg; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR c IS SELECT * FROM t1 ORDER BY a; BEGIN EXPLAIN EXTENDED SELECT c%ISOPEN, c%ROWCOUNT, c%FOUND, c%NOTFOUND; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR c IS SELECT * FROM t1 ORDER BY a; BEGIN OPEN c; CREATE TABLE t2 AS SELECT c%ISOPEN, c%ROWCOUNT, c%FOUND, c%NOTFOUND; SHOW CREATE TABLE t2; DROP TABLE t2; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (20);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (30);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS a INT:=0; CURSOR c IS SELECT * FROM t1 ORDER BY a; BEGIN SELECT a, c%ISOPEN; OPEN c; /* After OPEN and before FETCH: - %ROWCOUNT returns 0 - %FOUND and %NOTFOUND return NULL */ SELECT a, c%ISOPEN, c%ROWCOUNT, c%FOUND, c%NOTFOUND; FETCH c INTO a; SELECT a, c%ISOPEN, c%ROWCOUNT, c%FOUND, c%NOTFOUND; FETCH c INTO a; SELECT a, c%ISOPEN, c%ROWCOUNT, c%FOUND, c%NOTFOUND; FETCH c INTO a; SELECT a, c%ISOPEN, c%ROWCOUNT, c%FOUND, c%NOTFOUND; FETCH c INTO a; SELECT a, c%ISOPEN, c%ROWCOUNT, c%FOUND, c%NOTFOUND; CLOSE c; SELECT a, c%ISOPEN; /* After reopen and before FETCH: - %ROWCOUNT returns 0 - %FOUND and %NOTFOUND return NULL */ OPEN c; SELECT a, c%ISOPEN, c%ROWCOUNT, c%FOUND, c%NOTFOUND; FETCH c INTO a; SELECT a, c%ISOPEN, c%ROWCOUNT, c%FOUND, c%NOTFOUND; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (20);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (30);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS a INT:=0; CURSOR c IS SELECT * FROM t1 ORDER BY a; BEGIN OPEN c; LOOP FETCH c INTO a; EXIT WHEN c%NOTFOUND; SELECT a; END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (20);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (30);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS a INT:=0; CURSOR c IS SELECT * FROM t1 ORDER BY a; BEGIN OPEN c; LOOP FETCH c INTO a; EXIT WHEN NOT c%FOUND; SELECT a; END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a INT) AS v_a INT:=NULL; p_a INT:=NULL; CURSOR c (p_a VARCHAR2) IS SELECT a FROM t1 WHERE p_a IS NOT NULL; BEGIN OPEN c(a); FETCH c INTO v_a; IF c%NOTFOUND THEN BEGIN SELECT 'No records found' AS msg; RETURN; END; END IF; CLOSE c; SELECT 'Fetched a record a='||v_a AS msg; INSERT INTO t1 VALUES (v_a); END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "CALL p1(NULL);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a_a INT, a_b VARCHAR) AS v_a INT; v_b VARCHAR(10); CURSOR c (p_a INT, p_b VARCHAR) IS SELECT p_a,p_b FROM DUAL; BEGIN FOR i IN 0..1 LOOP OPEN c(a_a + i,a_b); LOOP FETCH c INTO v_a, v_b; EXIT WHEN c%NOTFOUND; SELECT 'Fetched a record a=' || v_a || ' b=' || v_b AS msg; END LOOP; CLOSE c; END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(1,'b1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a_a INT, a_b VARCHAR) AS v_a INT; v_b VARCHAR(10); CURSOR c (p_a INT, p_b VARCHAR) IS SELECT p_a,p_b FROM DUAL UNION ALL SELECT p_a+1,p_b||'b' FROM DUAL; BEGIN OPEN c(a_a,a_b); LOOP FETCH c INTO v_a, v_b; EXIT WHEN c%NOTFOUND; SELECT 'Fetched a record a=' || v_a || ' b=' || v_b AS msg; END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(1,'b1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a_a VARCHAR) AS v_a INT; CURSOR c (p_a INT) IS SELECT p_a FROM DUAL; BEGIN OPEN c(a_a); LOOP FETCH c INTO v_a; EXIT WHEN c%NOTFOUND; SELECT 'Fetched a record a=' || v_a AS msg; END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1('1b');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1('b1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a_a VARCHAR) AS v_a VARCHAR(10); CURSOR c (p_a VARCHAR) IS SELECT p_a FROM DUAL UNION SELECT REVERSE(p_a) FROM DUAL; BEGIN OPEN c((SELECT a_a)); LOOP FETCH c INTO v_a; EXIT WHEN c%NOTFOUND; SELECT v_a; END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1('ab');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SET sql_mode=ORACLE;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS v_a VARCHAR(10); v_b VARCHAR(20); CURSOR c (p_a VARCHAR, p_b VARCHAR) IS SELECT p_a, p_b FROM DUAL UNION SELECT p_b, p_a FROM DUAL; BEGIN OPEN c((SELECT 'aaa'),(SELECT 'bbb')); LOOP FETCH c INTO v_a, v_b; EXIT WHEN c%NOTFOUND; SELECT v_a, v_b; END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SET sql_mode=ORACLE;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a_a VARCHAR, a_b VARCHAR) AS v_a VARCHAR(10); v_b VARCHAR(20); CURSOR c (value_a VARCHAR, value_b VARCHAR, pattern_a VARCHAR, pattern_b VARCHAR) IS SELECT value_a, value_b FROM DUAL WHERE value_a LIKE pattern_a UNION SELECT value_b, value_a FROM DUAL WHERE value_b LIKE pattern_b; BEGIN OPEN c((SELECT 'aaa'),(SELECT 'bbb'),(SELECT a_a),(SELECT a_b)); LOOP FETCH c INTO v_a, v_b; EXIT WHEN c%NOTFOUND; SELECT v_a, v_b; END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1('%','%');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1('aaa','xxx');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1('xxx','bbb');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1('xxx','xxx');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE FUNCTION f1 (a VARCHAR) RETURN VARCHAR AS BEGIN RETURN a || 'y'; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE PROCEDURE p1(a_a VARCHAR) AS v_a VARCHAR(10); v_b VARCHAR(10); CURSOR c (p_sel_a VARCHAR, p_cmp_a VARCHAR) IS SELECT p_sel_a, p_cmp_a FROM DUAL; BEGIN OPEN c(f1(a_a), f1(a_a)); LOOP FETCH c INTO v_a, v_b; EXIT WHEN c%NOTFOUND; SELECT v_a; END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1('x');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1(f1(COALESCE(NULL, f1('x'))));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "function_info": [
      {
        "name": "f1",
        "fields": []
      },
      {
        "name": "COALESCE",
        "fields": []
      }
    ],
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP FUNCTION f1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1,'11');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1,'12');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (2,'21');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (2,'22');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (3,'31');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (3,'32');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a_a INT) AS v_a INT; v_b VARCHAR(10); CURSOR c (p_a INT) IS SELECT a,b FROM t1 WHERE a=p_a; BEGIN OPEN c(a_a); LOOP FETCH c INTO v_a, v_b; EXIT WHEN c%NOTFOUND; INSERT INTO t2 VALUES (v_a,v_b); END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1,'11');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1,'12');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (2,'21');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (2,'22');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (3,'31');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (3,'32');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a_a INT, a_b VARCHAR) AS v_a INT; v_b VARCHAR(10); CURSOR c (p_a INT, p_b VARCHAR) IS SELECT a,b FROM t1 WHERE a=p_a AND b=p_b; BEGIN OPEN c(a_a, a_b); LOOP FETCH c INTO v_a, v_b; EXIT WHEN c%NOTFOUND; INSERT INTO t2 VALUES (v_a,v_b); END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(1,'11');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (name VARCHAR(10), value INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('but',1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('but',1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('but',1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('bin',1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('bin',1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('bot',1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 (arg_name_limit VARCHAR, arg_total_limit INT) AS v_name VARCHAR(10); v_total INT; CURSOR c(p_v INT) IS SELECT name, SUM(value + p_v) + 0 AS total FROM t1 WHERE name LIKE arg_name_limit GROUP BY name HAVING total>=arg_total_limit; BEGIN FOR i IN 0..1 LOOP OPEN c(i); LOOP FETCH c INTO v_name, v_total; EXIT WHEN c%NOTFOUND; SELECT v_name, v_total; END LOOP; CLOSE c; END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1('%', 2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1('b_t', 0);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1,'b1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (2,'b2');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (3,'b3');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (4,'b4');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (5,'b5');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (6,'b6');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a_a INT) AS v_a INT; v_b VARCHAR(10); CURSOR c (p_a INT) IS SELECT a,b FROM t1 ORDER BY a LIMIT p_a; BEGIN CREATE TABLE t2 (a INT, b VARCHAR(10)); OPEN c(a_a); LOOP FETCH c INTO v_a, v_b; EXIT WHEN c%NOTFOUND; INSERT INTO t2 VALUES (v_a,v_b); END LOOP; CLOSE c; SELECT * FROM t2; DROP TABLE t2; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(1);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1(3);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1(6);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1,'A');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10),c DATETIME(3));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1,'b1','2001-01-01 10:20:30.123');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (2,'b2','2001-01-02 10:20:30.123');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 LIKE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS v_a t1.a%TYPE; v_b t1.b%TYPE; v_c t1.c%TYPE; CURSOR c IS SELECT a,b,c FROM t1; BEGIN OPEN c; LOOP FETCH c INTO v_a, v_b, v_c; EXIT WHEN c%NOTFOUND; INSERT INTO t2 (a,b,c) VALUES (v_a, v_b, v_c); END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(32));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'b10');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (20,'b20');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (30,'b30');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS rec ROW(a INT, b VARCHAR(32)); CURSOR c IS SELECT a,b FROM t1; BEGIN OPEN c; LOOP FETCH c INTO rec; EXIT WHEN c%NOTFOUND; SELECT ('rec=(' || rec.a ||','|| rec.b||')') AS c; END LOOP; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS x0 INT:=100; CURSOR cur(cp1 INT, cp2 INT) IS SELECT cp1+cp2; x1 INT:=101; BEGIN OPEN cur(10,11); CLOSE cur; SELECT x0, x1; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS x0 INT:=100; CURSOR cur(cp1 INT, cp2 INT) IS SELECT cp1+cp2; x1 t1.a%TYPE:=101; BEGIN OPEN cur(10,11); CLOSE cur; SELECT x0, x1; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS x0 INT:=100; CURSOR cur(cp1 INT, cp2 INT) IS SELECT cp1+cp2; x1 ROW(a INT,b INT):=ROW(101,102); BEGIN OPEN cur(10,11); CLOSE cur; SELECT x0, x1.a, x1.b; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'Tbl-t1.b0');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS x0 INT:=100; CURSOR cur(cp1 INT, cp2 INT) IS SELECT a,b FROM t1; x1 t1%ROWTYPE:=ROW(101,'Var-x1.b0'); BEGIN SELECT x0, x1.a, x1.b; OPEN cur(10,11); FETCH cur INTO x1; CLOSE cur; SELECT x0, x1.a, x1.b; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'Tbl-t1.b0');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS x0 INT:=100; CURSOR cur(cp1 INT, cp2 INT) IS SELECT a,b FROM t1; x1 cur%ROWTYPE:=ROW(101,'Var-x1.b0'); BEGIN SELECT x0, x1.a, x1.b; OPEN cur(10,11); FETCH cur INTO x1; CLOSE cur; SELECT x0, x1.a, x1.b; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DECLARE CURSOR c IS SELECT 1 AS c FROM DUAL; BEGIN OPEN c; SELECT c%ISOPEN, c%NOTFOUND, c%FOUND, c%ROWCOUNT; CLOSE c; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_UNDEFINED",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

