{
  "statement": "SET sql_mode=ORACLE;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(32));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 LIKE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'b10');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (20,'b20');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (30,'b30');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR c IS SELECT a,b FROM t1; BEGIN DECLARE rec c%ROWTYPE; BEGIN OPEN c; LOOP FETCH c INTO rec; EXIT WHEN c%NOTFOUND; SELECT 'rec=(' || rec.a ||','|| rec.b||')' AS c FROM dual; INSERT INTO t2 VALUES (rec.a, rec.b); END LOOP; CLOSE c; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur IS SELECT * FROM tes2.t1; BEGIN DECLARE rec cur%ROWTYPE; BEGIN NULL; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10), c DOUBLE, d DECIMAL(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur IS SELECT * FROM t1; BEGIN DECLARE rec cur%ROWTYPE; BEGIN CREATE TABLE t2 AS SELECT rec.a, rec.b, rec.c, rec.d; SHOW CREATE TABLE t2; DROP TABLE t2; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10), c DOUBLE, d DECIMAL(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur IS SELECT * FROM test.t1; BEGIN DECLARE rec cur%ROWTYPE; BEGIN CREATE TABLE t2 AS SELECT rec.a, rec.b, rec.c, rec.d; SHOW CREATE TABLE t2; DROP TABLE t2; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10), c DOUBLE, d DECIMAL(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur IS SELECT * FROM v1; BEGIN DECLARE rec cur%ROWTYPE; BEGIN CREATE TABLE t2 AS SELECT rec.a, rec.b, rec.c, rec.d; SHOW CREATE TABLE t2; DROP TABLE t2; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10), c DOUBLE, d DECIMAL(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE VIEW v1 AS SELECT * FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP VIEW v1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur IS SELECT * FROM test.v1; BEGIN DECLARE rec cur%ROWTYPE; BEGIN CREATE TABLE t2 AS SELECT rec.a, rec.b, rec.c, rec.d; SHOW CREATE TABLE t2; DROP TABLE t2; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10), c DOUBLE, d DECIMAL(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE VIEW v1 AS SELECT * FROM t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_CREATE",
    "table_names": [
      {
        "table": "v1"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP VIEW v1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "table_names": [
      {
        "table": "v1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10), c DOUBLE, d DECIMAL(10,2));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; BEGIN DECLARE rec1 cur1%ROWTYPE; BEGIN SELECT rec1.a, rec1.b, rec1.c, rec1.d; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; BEGIN DECLARE rec1 cur1%ROWTYPE := ROW(10,'bbb'); BEGIN SELECT rec1.a, rec1.b; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; BEGIN DECLARE rec1 cur1%ROWTYPE := ROW(10,'bbb','ccc'); BEGIN SELECT rec1.a, rec1.b; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur IS SELECT * FROM t1; BEGIN DECLARE rec1 ROW(a INT, b VARCHAR(10)):= ROW(10,'bbb'); rec2 cur%ROWTYPE := rec1; BEGIN SELECT rec2.a, rec2.b; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; BEGIN DECLARE rec1 cur1%ROWTYPE := ROW(10,'bbb'); rec2 ROW(a INT, b VARCHAR(10)):= rec1; BEGIN SELECT rec2.a, rec2.b; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10), c DOUBLE);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; CURSOR cur2 IS SELECT * FROM t2; BEGIN DECLARE rec1 cur1%ROWTYPE; rec2 cur2%ROWTYPE; BEGIN rec2:=rec1; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; CURSOR cur2 IS SELECT * FROM t2; BEGIN DECLARE rec1 cur1%ROWTYPE; rec2 cur2%ROWTYPE; BEGIN rec1:=rec2; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (x INT, y VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; CURSOR cur2 IS SELECT * FROM t2; BEGIN DECLARE rec1 cur1%ROWTYPE; rec2 cur2%ROWTYPE; BEGIN rec1.a:= 10; rec1.b:= 'bbb'; rec2:=rec1; SELECT rec2.x, rec2.y; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; BEGIN DECLARE rec1 cur1%ROWTYPE; rec2 ROW(x INT,y INT,z INT); BEGIN rec2.x:= 10; rec2.y:= 20; rec2.z:= 30; rec1:= rec2; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; BEGIN DECLARE rec1 cur1%ROWTYPE; rec2 ROW(x INT,y INT); BEGIN rec2.x:= 10; rec2.y:= 20; rec1:= rec2; SELECT rec1.a, rec1.b; rec1.a:= 11; rec1.b:= 21; rec2:= rec1; SELECT rec2.x, rec2.y; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; BEGIN DECLARE rec1 cur1%ROWTYPE; BEGIN rec1:= ROW(10,20); SELECT rec1.a, rec1.b; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10), c DOUBLE, d DECIMAL(10,2));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'bb1',111.111e2, 12.31);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; CURSOR cur2 IS SELECT * FROM t2; BEGIN DECLARE rec2 cur2%ROWTYPE; BEGIN OPEN cur1; FETCH cur1 INTO rec2; CLOSE cur1; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10), c DOUBLE, d DECIMAL(10,2));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 LIKE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'bb1',111.111e2, 12.31);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (20,'bb2',222.222e2, 12.32);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (30,'bb3',333.333e2, 12.33);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur IS SELECT * FROM t1; BEGIN DECLARE rec cur%ROWTYPE; BEGIN OPEN cur; LOOP FETCH cur INTO rec; EXIT WHEN cur%NOTFOUND; SELECT rec.a, rec.b, rec.c, rec.d; INSERT INTO t2 VALUES (rec.a, rec.b, rec.c, rec.d); END LOOP; CLOSE cur; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10), c DOUBLE, d DECIMAL(10,2));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 LIKE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'bb1',111.111e2, 12.31);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (20,'bb2',222.222e2, 12.32);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (30,'bb3',333.333e2, 12.33);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur IS SELECT * FROM t1; BEGIN OPEN cur; LOOP DECLARE rec cur%ROWTYPE; BEGIN FETCH cur INTO rec; EXIT WHEN cur%NOTFOUND; SELECT rec.a, rec.b, rec.c, rec.d; INSERT INTO t2 VALUES (rec.a, rec.b, rec.c, rec.d); END; END LOOP; CLOSE cur; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (x INT, y VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'bbb');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; CURSOR cur2 IS SELECT * FROM t2; BEGIN DECLARE rec2 cur2%ROWTYPE; BEGIN OPEN cur1; FETCH cur1 INTO rec2; SELECT rec2.x, rec2.y; CLOSE cur1; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (a INT, b INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'11x');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1() AS CURSOR cur1 IS SELECT * FROM t1; CURSOR cur2 IS SELECT * FROM t2; BEGIN DECLARE rec2 cur2%ROWTYPE; BEGIN OPEN cur1; FETCH cur1 INTO rec2; SELECT rec2.a, rec2.b; CLOSE cur1; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (1,2);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a OUT INT,b OUT VARCHAR(10)) AS BEGIN a:=10; b:='bb'; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE PROCEDURE p2() AS CURSOR cur1 IS SELECT * FROM t1; BEGIN DECLARE rec1 cur1%ROWTYPE; BEGIN CALL p1(rec1.a, rec1.b); SELECT rec1.a, rec1.b; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p2();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a ROW(a INT, b VARCHAR(10))) AS BEGIN SELECT a.a, a.b; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE PROCEDURE p2() AS CURSOR cur IS SELECT * FROM t1; BEGIN DECLARE rec1 cur%ROWTYPE:= ROW(10,'bb'); BEGIN CALL p1(rec1); END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p2();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(a OUT ROW(a INT, b VARCHAR(10))) AS BEGIN a:= ROW(10,'bb'); END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CREATE PROCEDURE p2() AS CURSOR cur IS SELECT * FROM t1; BEGIN DECLARE rec1 cur%ROWTYPE; BEGIN CALL p1(rec1); SELECT rec1.a, rec1.b; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p2();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 (res IN OUT INTEGER) AS a INT:=10; CURSOR cur1 IS SELECT a FROM DUAL; BEGIN DECLARE rec1 cur1%ROWTYPE; BEGIN OPEN cur1; FETCH cur1 INTO rec1; CLOSE cur1; res:=rec1.a; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(@res);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "SELECT @res;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SELECT",
    "type_mask": "sql::TYPE_READ|sql::TYPE_USERVAR_READ"
  }
}

{
  "statement": "SET @res=NULL;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE|sql::TYPE_USERVAR_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur1 IS SELECT * FROM t1; BEGIN DECLARE rec cur1%ROWTYPE:=ROW(10,'bb'); BEGIN EXPLAIN EXTENDED SELECT rec.a, rec.b; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur1 IS SELECT 10 AS a, CONCAT(_latin1'a' COLLATE latin1_bin, _latin1'a' COLLATE latin1_swedish_ci) AS b; BEGIN DECLARE rec1 cur1%ROWTYPE; BEGIN OPEN cur1; FETCH cur1 INTO rec1; CLOSE cur1; SELECT a,b; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur1 IS SELECT * FROM t1; BEGIN DECLARE rec cur1%ROWTYPE; BEGIN SELECT rec.c; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "ALTER TABLE t1 ADD c INT;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_ALTER_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "ALTER PROCEDURE p1 COMMENT 'test';",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_ALTER",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur IS SELECT * FROM t1; BEGIN DECLARE rec cur%ROWTYPE:=ROW(10,'bb'); BEGIN SELECT rec.A, rec.B; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TEMPORARY TABLE t1 (x INT, y VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE|sql::TYPE_CREATE_TMP_TABLE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur IS SELECT * FROM t1; BEGIN DECLARE rec cur%ROWTYPE:=ROW(10,'bb'); BEGIN SELECT rec.A, rec.B; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP TEMPORARY TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "ALTER PROCEDURE p1 COMMENT 'test';",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_ALTER",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(32));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'b10');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur IS SELECT * FROM t1; BEGIN DROP TABLE t1; CREATE TABLE t1 (a INT, b VARCHAR(32), c INT); DECLARE rec cur%ROWTYPE; BEGIN rec.c:=10; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(32));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'b10');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur IS SELECT * FROM t1; BEGIN DECLARE rec cur%ROWTYPE; BEGIN DROP TABLE t1; CREATE TABLE t1 (a INT, b VARCHAR(32), c INT); rec.c:=10; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 (a INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur IS SELECT * FROM t1, t2; BEGIN DECLARE rec cur%ROWTYPE; BEGIN SELECT rec.a; rec.a:=10; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SET NAMES utf8;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES ('a');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur IS SELECT a, CONCAT(a,'a'), CONCAT(a,'ö') FROM t1; BEGIN DECLARE rec cur%ROWTYPE; BEGIN OPEN cur; FETCH cur INTO rec; CLOSE cur; SELECT rec.a, rec.CONCAT(a,'a'), rec.CONCAT(a,'ö'); END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SET NAMES latin1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_SET",
    "type_mask": "sql::TYPE_SESSION_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'b1'),(20,'b2'),(30,'b3');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur1 IS SELECT a,b FROM t1; BEGIN DECLARE rec1 cur1%ROWTYPE:=ROW(0,'b0'); CURSOR cur2 IS SELECT rec1.a AS a, rec1.b AS b FROM t1; BEGIN DECLARE rec2 cur2%ROWTYPE; BEGIN OPEN cur2; LOOP FETCH cur2 INTO rec2; EXIT WHEN cur2%NOTFOUND; SELECT rec2.a, rec2.b; END LOOP; CLOSE cur2; END; END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a VARCHAR(10) CHARACTER SET latin1, b VARCHAR(10) CHARACTER SET utf8);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (0xFF, 'a');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur1 IS SELECT CONCAT(a,b) AS c FROM t1; BEGIN DECLARE rec1 cur1%ROWTYPE; BEGIN OPEN cur1; FETCH cur1 INTO rec1; CLOSE cur1; SELECT HEX(rec1.c); END; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10, 'b0');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS rec INT:=10; CURSOR c1 IS SELECT a,b FROM t1; BEGIN FOR rec IN c1 LOOP SELECT rec.a; END LOOP; SELECT rec; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur IS SELECT 'a' AS a, 'A' as a; BEGIN FOR rec IN cur LOOP NULL; END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'b0');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (11,'b1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (12,'b2');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 LIKE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t3 LIKE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS CURSOR cur IS SELECT a, b FROM t1; BEGIN FOR rec IN cur LOOP SELECT rec.a, rec.b; INSERT INTO t2 VALUES (rec.a, rec.b); rec.a:= rec.a + 1000; rec.b:= 'b' || rec.b; INSERT INTO t3 VALUES (rec.a, rec.b); END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(32));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'b0');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (11,'b1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (12,'b2');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1(pa INT, pb VARCHAR(32)) AS CURSOR cur(va INT, vb VARCHAR(32)) IS SELECT a, b FROM t1 WHERE a=va AND b=vb; BEGIN FOR rec IN cur(pa,pb) LOOP SELECT rec.a, rec.b; END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1(10,'B0');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1(11,'B1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1(12,'B2');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CALL p1(12,'non-existing');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN FOR rec IN (SELECT rec) LOOP NULL; END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN FOR rec IN (SELECT rec.a) LOOP NULL; END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE rec (rec INT);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "rec"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO rec VALUES (10);",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "rec"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN FOR rec IN (SELECT rec FROM rec) LOOP SELECT rec.rec; END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE rec;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "rec"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN FOR rec IN (SELECT 'a' AS a, 'A' as a) LOOP NULL; END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'b0');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (11,'b1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (12,'b2');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t2 LIKE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t2"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t3 LIKE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t3"
      },
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN FOR rec IN (SELECT a, b FROM t1) LOOP SELECT rec.a, rec.b; INSERT INTO t2 VALUES (rec.a, rec.b); rec.a:= rec.a + 1000; rec.b:= 'b'|| rec.b; INSERT INTO t3 VALUES (rec.a, rec.b); END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "SELECT * FROM t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "SELECT * FROM t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "field_info": [
      {
        "column": "*"
      }
    ],
    "operation": "sql::OP_SELECT",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_READ"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t3;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t3"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t2;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t2"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE TABLE t1 (a INT, b VARCHAR(10));",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (10,'b1');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (11,'b2');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "INSERT INTO t1 VALUES (12,'b3');",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_INSERT",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "CREATE PROCEDURE p1 AS BEGIN FOR rec1 IN (SELECT a, b FROM t1) LOOP DECLARE CURSOR cur2 IS SELECT a+1000 AS a, 'bb'||b AS b FROM t1 WHERE a=rec1.a AND b=rec1.b; BEGIN SELECT rec1.a, rec1.b; FOR rec2 IN cur2 LOOP SELECT rec2.a, rec2.b; END LOOP; END; END LOOP; FOR rec1 IN (SELECT a,b FROM t1) LOOP FOR rec2 IN (SELECT a+2000 AS a,'bbb'||b AS b FROM t1 WHERE a=rec1.a AND b=rec1.b) LOOP SELECT rec2.a, rec2.b; END LOOP; END LOOP; END; ",
  "result": "Parser::Result::TOKENIZED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CREATE",
    "type_mask": "sql::TYPE_WRITE",
    "is_multi_stmt": true
  }
}

{
  "statement": "CALL p1();",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_CALL",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP PROCEDURE p1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP",
    "type_mask": "sql::TYPE_WRITE"
  }
}

{
  "statement": "DROP TABLE t1;",
  "result": "Parser::Result::PARSED",
  "sql_mode": "Parser::SqlMode::ORACLE",
  "classification": {
    "operation": "sql::OP_DROP_TABLE",
    "table_names": [
      {
        "table": "t1"
      }
    ],
    "type_mask": "sql::TYPE_WRITE"
  }
}

